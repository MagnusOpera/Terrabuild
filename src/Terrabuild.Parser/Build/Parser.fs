// Implementation file for parser generated by fsyacc
module BuildParser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Build/Parser.fsy"
 
open Terrabuild.Parser.AST
open Terrabuild.Parser.Build.AST


#if DEBUG
let debugPrint s = printfn "### %s" s
#else
let debugPrint s = ignore s
#endif


# 19 "Build/Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | DEPENDENCIES
  | OUTPUTS
  | IGNORES
  | LABELS
  | PARSER
  | CONTAINER
  | PARAMETERS
  | SCRIPT
  | DEPENDS_ON
  | EXTENSION
  | PROJECT
  | TARGET
  | EOF
  | TRIM
  | UPPER
  | LOWER
  | PLUS
  | COMMA
  | EQUAL
  | LPAREN
  | RPAREN
  | LSQBRACKET
  | RSQBRACKET
  | LBRACE
  | RBRACE
  | VARIABLE of (string)
  | IDENTIFIER of (string)
  | STRING of (string)
  | NOTHING
  | TRUE
  | FALSE
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_DEPENDENCIES
    | TOKEN_OUTPUTS
    | TOKEN_IGNORES
    | TOKEN_LABELS
    | TOKEN_PARSER
    | TOKEN_CONTAINER
    | TOKEN_PARAMETERS
    | TOKEN_SCRIPT
    | TOKEN_DEPENDS_ON
    | TOKEN_EXTENSION
    | TOKEN_PROJECT
    | TOKEN_TARGET
    | TOKEN_EOF
    | TOKEN_TRIM
    | TOKEN_UPPER
    | TOKEN_LOWER
    | TOKEN_PLUS
    | TOKEN_COMMA
    | TOKEN_EQUAL
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LSQBRACKET
    | TOKEN_RSQBRACKET
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_VARIABLE
    | TOKEN_IDENTIFIER
    | TOKEN_STRING
    | TOKEN_NOTHING
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startBuild
    | NONTERM_Build
    | NONTERM_BuildComponents
    | NONTERM_Extension
    | NONTERM_ExtensionComponents
    | NONTERM_Container
    | NONTERM_Script
    | NONTERM_Parameters
    | NONTERM_Project
    | NONTERM_ProjectComponents
    | NONTERM_ProjectDependencies
    | NONTERM_ProjectOutputs
    | NONTERM_ProjectIgnores
    | NONTERM_ProjectLabels
    | NONTERM_ProjectParser
    | NONTERM_Target
    | NONTERM_TargetComponents
    | NONTERM_DependsOn
    | NONTERM_Step
    | NONTERM_String
    | NONTERM_ListOfString
    | NONTERM_Strings
    | NONTERM_Variables
    | NONTERM_Variable
    | NONTERM_Expr

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | DEPENDENCIES  -> 0 
  | OUTPUTS  -> 1 
  | IGNORES  -> 2 
  | LABELS  -> 3 
  | PARSER  -> 4 
  | CONTAINER  -> 5 
  | PARAMETERS  -> 6 
  | SCRIPT  -> 7 
  | DEPENDS_ON  -> 8 
  | EXTENSION  -> 9 
  | PROJECT  -> 10 
  | TARGET  -> 11 
  | EOF  -> 12 
  | TRIM  -> 13 
  | UPPER  -> 14 
  | LOWER  -> 15 
  | PLUS  -> 16 
  | COMMA  -> 17 
  | EQUAL  -> 18 
  | LPAREN  -> 19 
  | RPAREN  -> 20 
  | LSQBRACKET  -> 21 
  | RSQBRACKET  -> 22 
  | LBRACE  -> 23 
  | RBRACE  -> 24 
  | VARIABLE _ -> 25 
  | IDENTIFIER _ -> 26 
  | STRING _ -> 27 
  | NOTHING  -> 28 
  | TRUE  -> 29 
  | FALSE  -> 30 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_DEPENDENCIES 
  | 1 -> TOKEN_OUTPUTS 
  | 2 -> TOKEN_IGNORES 
  | 3 -> TOKEN_LABELS 
  | 4 -> TOKEN_PARSER 
  | 5 -> TOKEN_CONTAINER 
  | 6 -> TOKEN_PARAMETERS 
  | 7 -> TOKEN_SCRIPT 
  | 8 -> TOKEN_DEPENDS_ON 
  | 9 -> TOKEN_EXTENSION 
  | 10 -> TOKEN_PROJECT 
  | 11 -> TOKEN_TARGET 
  | 12 -> TOKEN_EOF 
  | 13 -> TOKEN_TRIM 
  | 14 -> TOKEN_UPPER 
  | 15 -> TOKEN_LOWER 
  | 16 -> TOKEN_PLUS 
  | 17 -> TOKEN_COMMA 
  | 18 -> TOKEN_EQUAL 
  | 19 -> TOKEN_LPAREN 
  | 20 -> TOKEN_RPAREN 
  | 21 -> TOKEN_LSQBRACKET 
  | 22 -> TOKEN_RSQBRACKET 
  | 23 -> TOKEN_LBRACE 
  | 24 -> TOKEN_RBRACE 
  | 25 -> TOKEN_VARIABLE 
  | 26 -> TOKEN_IDENTIFIER 
  | 27 -> TOKEN_STRING 
  | 28 -> TOKEN_NOTHING 
  | 29 -> TOKEN_TRUE 
  | 30 -> TOKEN_FALSE 
  | 33 -> TOKEN_end_of_input
  | 31 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startBuild 
    | 1 -> NONTERM_Build 
    | 2 -> NONTERM_BuildComponents 
    | 3 -> NONTERM_BuildComponents 
    | 4 -> NONTERM_BuildComponents 
    | 5 -> NONTERM_BuildComponents 
    | 6 -> NONTERM_Extension 
    | 7 -> NONTERM_ExtensionComponents 
    | 8 -> NONTERM_ExtensionComponents 
    | 9 -> NONTERM_ExtensionComponents 
    | 10 -> NONTERM_ExtensionComponents 
    | 11 -> NONTERM_Container 
    | 12 -> NONTERM_Script 
    | 13 -> NONTERM_Parameters 
    | 14 -> NONTERM_Project 
    | 15 -> NONTERM_ProjectComponents 
    | 16 -> NONTERM_ProjectComponents 
    | 17 -> NONTERM_ProjectComponents 
    | 18 -> NONTERM_ProjectComponents 
    | 19 -> NONTERM_ProjectComponents 
    | 20 -> NONTERM_ProjectComponents 
    | 21 -> NONTERM_ProjectDependencies 
    | 22 -> NONTERM_ProjectOutputs 
    | 23 -> NONTERM_ProjectIgnores 
    | 24 -> NONTERM_ProjectLabels 
    | 25 -> NONTERM_ProjectParser 
    | 26 -> NONTERM_Target 
    | 27 -> NONTERM_TargetComponents 
    | 28 -> NONTERM_TargetComponents 
    | 29 -> NONTERM_TargetComponents 
    | 30 -> NONTERM_DependsOn 
    | 31 -> NONTERM_Step 
    | 32 -> NONTERM_String 
    | 33 -> NONTERM_ListOfString 
    | 34 -> NONTERM_Strings 
    | 35 -> NONTERM_Strings 
    | 36 -> NONTERM_Variables 
    | 37 -> NONTERM_Variables 
    | 38 -> NONTERM_Variable 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_Expr 
    | 44 -> NONTERM_Expr 
    | 45 -> NONTERM_Expr 
    | 46 -> NONTERM_Expr 
    | 47 -> NONTERM_Expr 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 33 
let _fsyacc_tagOfErrorTerminal = 31

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | DEPENDENCIES  -> "DEPENDENCIES" 
  | OUTPUTS  -> "OUTPUTS" 
  | IGNORES  -> "IGNORES" 
  | LABELS  -> "LABELS" 
  | PARSER  -> "PARSER" 
  | CONTAINER  -> "CONTAINER" 
  | PARAMETERS  -> "PARAMETERS" 
  | SCRIPT  -> "SCRIPT" 
  | DEPENDS_ON  -> "DEPENDS_ON" 
  | EXTENSION  -> "EXTENSION" 
  | PROJECT  -> "PROJECT" 
  | TARGET  -> "TARGET" 
  | EOF  -> "EOF" 
  | TRIM  -> "TRIM" 
  | UPPER  -> "UPPER" 
  | LOWER  -> "LOWER" 
  | PLUS  -> "PLUS" 
  | COMMA  -> "COMMA" 
  | EQUAL  -> "EQUAL" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | LSQBRACKET  -> "LSQBRACKET" 
  | RSQBRACKET  -> "RSQBRACKET" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | VARIABLE _ -> "VARIABLE" 
  | IDENTIFIER _ -> "IDENTIFIER" 
  | STRING _ -> "STRING" 
  | NOTHING  -> "NOTHING" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | DEPENDENCIES  -> (null : System.Object) 
  | OUTPUTS  -> (null : System.Object) 
  | IGNORES  -> (null : System.Object) 
  | LABELS  -> (null : System.Object) 
  | PARSER  -> (null : System.Object) 
  | CONTAINER  -> (null : System.Object) 
  | PARAMETERS  -> (null : System.Object) 
  | SCRIPT  -> (null : System.Object) 
  | DEPENDS_ON  -> (null : System.Object) 
  | EXTENSION  -> (null : System.Object) 
  | PROJECT  -> (null : System.Object) 
  | TARGET  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | TRIM  -> (null : System.Object) 
  | UPPER  -> (null : System.Object) 
  | LOWER  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LSQBRACKET  -> (null : System.Object) 
  | RSQBRACKET  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | VARIABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NOTHING  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 1us; 65535us; 2us; 4us; 1us; 65535us; 9us; 10us; 1us; 65535us; 10us; 12us; 1us; 65535us; 10us; 13us; 1us; 65535us; 10us; 14us; 1us; 65535us; 2us; 5us; 1us; 65535us; 26us; 27us; 1us; 65535us; 27us; 29us; 1us; 65535us; 27us; 30us; 1us; 65535us; 27us; 31us; 1us; 65535us; 27us; 32us; 1us; 65535us; 27us; 33us; 1us; 65535us; 2us; 6us; 1us; 65535us; 51us; 52us; 1us; 65535us; 52us; 54us; 1us; 65535us; 52us; 55us; 4us; 65535us; 16us; 17us; 19us; 20us; 47us; 48us; 66us; 68us; 5us; 65535us; 35us; 36us; 38us; 39us; 41us; 42us; 44us; 45us; 57us; 58us; 1us; 65535us; 65us; 66us; 2us; 65535us; 22us; 23us; 61us; 62us; 2us; 65535us; 23us; 69us; 62us; 69us; 5us; 65535us; 71us; 72us; 82us; 78us; 84us; 79us; 87us; 80us; 90us; 81us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 7us; 9us; 11us; 13us; 15us; 17us; 19us; 21us; 23us; 25us; 27us; 29us; 31us; 33us; 35us; 37us; 42us; 48us; 50us; 53us; 56us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 4us; 1us; 3us; 4us; 5us; 1us; 1us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 6us; 4us; 6us; 8us; 9us; 10us; 1us; 6us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 2us; 13us; 37us; 1us; 13us; 1us; 14us; 1us; 14us; 6us; 14us; 16us; 17us; 18us; 19us; 20us; 1us; 14us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 26us; 3us; 26us; 28us; 29us; 1us; 26us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 2us; 31us; 37us; 1us; 31us; 1us; 32us; 1us; 33us; 2us; 33us; 35us; 1us; 33us; 1us; 35us; 1us; 37us; 1us; 38us; 1us; 38us; 2us; 38us; 44us; 1us; 39us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 2us; 44us; 44us; 2us; 44us; 45us; 2us; 44us; 46us; 2us; 44us; 47us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 9us; 11us; 13us; 15us; 17us; 19us; 21us; 23us; 28us; 30us; 32us; 34us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 55us; 57us; 59us; 61us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 110us; 112us; 114us; 116us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 141us; 143us; 145us; 147us; 150us; 152us; 154us; 156us; 158us; 160us; 163us; 165us; 167us; 169us; 171us; 173us; 176us; 179us; 182us; 185us; 187us; 189us; 191us; 193us; 195us; 197us; 199us; 201us; 203us; |]
let _fsyacc_action_rows = 92
let _fsyacc_actionTableElements = [|0us; 16386us; 0us; 49152us; 4us; 32768us; 9us; 7us; 10us; 25us; 11us; 49us; 12us; 3us; 0us; 16385us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 26us; 8us; 1us; 32768us; 23us; 9us; 0us; 16391us; 4us; 32768us; 5us; 15us; 6us; 21us; 7us; 18us; 24us; 11us; 0us; 16390us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 1us; 32768us; 18us; 16us; 1us; 32768us; 27us; 64us; 0us; 16395us; 1us; 32768us; 18us; 19us; 1us; 32768us; 27us; 64us; 0us; 16396us; 1us; 32768us; 23us; 22us; 0us; 16420us; 2us; 32768us; 24us; 24us; 26us; 70us; 0us; 16397us; 1us; 32768us; 23us; 26us; 0us; 16399us; 6us; 32768us; 0us; 34us; 1us; 37us; 2us; 40us; 3us; 43us; 4us; 46us; 24us; 28us; 0us; 16398us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 1us; 32768us; 18us; 35us; 1us; 32768us; 21us; 65us; 0us; 16405us; 1us; 32768us; 18us; 38us; 1us; 32768us; 21us; 65us; 0us; 16406us; 1us; 32768us; 18us; 41us; 1us; 32768us; 21us; 65us; 0us; 16407us; 1us; 32768us; 18us; 44us; 1us; 32768us; 21us; 65us; 0us; 16408us; 1us; 32768us; 18us; 47us; 1us; 32768us; 27us; 64us; 0us; 16409us; 1us; 32768us; 26us; 50us; 1us; 32768us; 23us; 51us; 0us; 16411us; 3us; 32768us; 8us; 56us; 24us; 53us; 26us; 59us; 0us; 16410us; 0us; 16412us; 0us; 16413us; 1us; 32768us; 18us; 57us; 1us; 32768us; 21us; 65us; 0us; 16414us; 1us; 32768us; 26us; 60us; 1us; 32768us; 23us; 61us; 0us; 16420us; 2us; 32768us; 24us; 63us; 26us; 70us; 0us; 16415us; 0us; 16416us; 0us; 16418us; 2us; 32768us; 22us; 67us; 27us; 64us; 0us; 16417us; 0us; 16419us; 0us; 16421us; 1us; 32768us; 18us; 71us; 8us; 32768us; 13us; 83us; 14us; 86us; 15us; 89us; 25us; 77us; 27us; 76us; 28us; 73us; 29us; 74us; 30us; 75us; 1us; 16422us; 16us; 82us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 0us; 16427us; 0us; 16428us; 2us; 32768us; 16us; 82us; 20us; 85us; 2us; 32768us; 16us; 82us; 20us; 88us; 2us; 32768us; 16us; 82us; 20us; 91us; 8us; 32768us; 13us; 83us; 14us; 86us; 15us; 89us; 25us; 77us; 27us; 76us; 28us; 73us; 29us; 74us; 30us; 75us; 1us; 32768us; 19us; 84us; 8us; 32768us; 13us; 83us; 14us; 86us; 15us; 89us; 25us; 77us; 27us; 76us; 28us; 73us; 29us; 74us; 30us; 75us; 0us; 16429us; 1us; 32768us; 19us; 87us; 8us; 32768us; 13us; 83us; 14us; 86us; 15us; 89us; 25us; 77us; 27us; 76us; 28us; 73us; 29us; 74us; 30us; 75us; 0us; 16430us; 1us; 32768us; 19us; 90us; 8us; 32768us; 13us; 83us; 14us; 86us; 15us; 89us; 25us; 77us; 27us; 76us; 28us; 73us; 29us; 74us; 30us; 75us; 0us; 16431us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 1us; 2us; 7us; 8us; 9us; 10us; 11us; 13us; 15us; 16us; 21us; 22us; 23us; 24us; 25us; 27us; 29us; 30us; 32us; 34us; 35us; 37us; 38us; 41us; 42us; 44us; 45us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 60us; 62us; 63us; 65us; 67us; 68us; 70us; 72us; 73us; 75us; 77us; 78us; 80us; 82us; 83us; 85us; 87us; 88us; 92us; 93us; 94us; 95us; 97us; 99us; 100us; 102us; 104us; 105us; 108us; 109us; 110us; 111us; 114us; 115us; 116us; 117us; 119us; 128us; 130us; 131us; 132us; 133us; 134us; 135us; 136us; 139us; 142us; 145us; 154us; 156us; 165us; 166us; 168us; 177us; 178us; 180us; 189us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 5us; 0us; 2us; 2us; 2us; 3us; 3us; 4us; 4us; 0us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 5us; 0us; 2us; 2us; 3us; 5us; 1us; 3us; 0us; 2us; 0us; 2us; 3us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 4us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 4us; 4us; 4us; 5us; 6us; 7us; 8us; 9us; 9us; 9us; 9us; 9us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 16us; 16us; 17us; 18us; 19us; 20us; 21us; 21us; 22us; 22us; 23us; 24us; 24us; 24us; 24us; 24us; 24us; 24us; 24us; 24us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 16390us; 16392us; 16393us; 16394us; 65535us; 65535us; 16395us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 65535us; 65535us; 65535us; 16398us; 16400us; 16401us; 16402us; 16403us; 16404us; 65535us; 65535us; 16405us; 65535us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 65535us; 65535us; 16409us; 65535us; 65535us; 65535us; 65535us; 16410us; 16412us; 16413us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 16416us; 65535us; 65535us; 16417us; 16419us; 16421us; 65535us; 65535us; 65535us; 16423us; 16424us; 16425us; 16426us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 16430us; 65535us; 65535us; 16431us; |]
let _fsyacc_reductions ()  =    [| 
# 325 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Terrabuild.Parser.Build.AST.Build in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startBuild));
# 334 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_BuildComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 39 "Build/Parser.fsy"
                                                 _1 
                   )
# 39 "Build/Parser.fsy"
                 : Terrabuild.Parser.Build.AST.Build));
# 345 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "Build/Parser.fsy"
                                         Build.Empty 
                   )
# 42 "Build/Parser.fsy"
                 : 'gentype_BuildComponents));
# 355 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_BuildComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Extension in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "Build/Parser.fsy"
                                                       _1.Patch _2 
                   )
# 43 "Build/Parser.fsy"
                 : 'gentype_BuildComponents));
# 367 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_BuildComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Project in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "Build/Parser.fsy"
                                                     _1.Patch _2 
                   )
# 44 "Build/Parser.fsy"
                 : 'gentype_BuildComponents));
# 379 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_BuildComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Target in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Build/Parser.fsy"
                                                    _1.Patch _2 
                   )
# 45 "Build/Parser.fsy"
                 : 'gentype_BuildComponents));
# 391 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_ExtensionComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Build/Parser.fsy"
                                                                                    BuildComponents.Extension (_2, _4) 
                   )
# 49 "Build/Parser.fsy"
                 : 'gentype_Extension));
# 403 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "Build/Parser.fsy"
                                         Extension.Empty 
                   )
# 51 "Build/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 413 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Container in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Build/Parser.fsy"
                                                           _1.Patch _2 
                   )
# 52 "Build/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 425 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Script in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Build/Parser.fsy"
                                                        _1.Patch _2 
                   )
# 53 "Build/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 437 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Parameters in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Build/Parser.fsy"
                                                            _1.Patch _2 
                   )
# 54 "Build/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 449 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Build/Parser.fsy"
                                                    ExtensionComponents.Container _3 
                   )
# 56 "Build/Parser.fsy"
                 : 'gentype_Container));
# 460 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Build/Parser.fsy"
                                                 ExtensionComponents.Script _3 
                   )
# 58 "Build/Parser.fsy"
                 : 'gentype_Script));
# 471 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Variables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Build/Parser.fsy"
                                                                ExtensionComponents.Parameters _3 
                   )
# 60 "Build/Parser.fsy"
                 : 'gentype_Parameters));
# 482 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ProjectComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Build/Parser.fsy"
                                                                     BuildComponents.Project _3 
                   )
# 64 "Build/Parser.fsy"
                 : 'gentype_Project));
# 493 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Build/Parser.fsy"
                                         Project.Empty 
                   )
# 66 "Build/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 503 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectDependencies in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Build/Parser.fsy"
                                                                   _1.Patch _2 
                   )
# 67 "Build/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 515 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectOutputs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Build/Parser.fsy"
                                                              _1.Patch _2 
                   )
# 68 "Build/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 527 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectIgnores in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Build/Parser.fsy"
                                                              _1.Patch _2 
                   )
# 69 "Build/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 539 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectLabels in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Build/Parser.fsy"
                                                             _1.Patch _2 
                   )
# 70 "Build/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 551 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectParser in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Build/Parser.fsy"
                                                             _1.Patch _2 
                   )
# 71 "Build/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 563 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Build/Parser.fsy"
                                                             ProjectComponents.Dependencies _3 
                   )
# 73 "Build/Parser.fsy"
                 : 'gentype_ProjectDependencies));
# 574 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Build/Parser.fsy"
                                                        ProjectComponents.Outputs _3 
                   )
# 75 "Build/Parser.fsy"
                 : 'gentype_ProjectOutputs));
# 585 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Build/Parser.fsy"
                                                        ProjectComponents.Ignores _3 
                   )
# 77 "Build/Parser.fsy"
                 : 'gentype_ProjectIgnores));
# 596 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Build/Parser.fsy"
                                                       ProjectComponents.Labels _3 
                   )
# 79 "Build/Parser.fsy"
                 : 'gentype_ProjectLabels));
# 607 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Build/Parser.fsy"
                                                 ProjectComponents.Parser _3 
                   )
# 81 "Build/Parser.fsy"
                 : 'gentype_ProjectParser));
# 618 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_TargetComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Build/Parser.fsy"
                                                                              BuildComponents.Target (_2, _4) 
                   )
# 85 "Build/Parser.fsy"
                 : 'gentype_Target));
# 630 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Build/Parser.fsy"
                                         Target.Empty 
                   )
# 87 "Build/Parser.fsy"
                 : 'gentype_TargetComponents));
# 640 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_DependsOn in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Build/Parser.fsy"
                                                        _1.Patch _2 
                   )
# 88 "Build/Parser.fsy"
                 : 'gentype_TargetComponents));
# 652 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Step in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Build/Parser.fsy"
                                                   _1.Patch _2 
                   )
# 89 "Build/Parser.fsy"
                 : 'gentype_TargetComponents));
# 664 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Build/Parser.fsy"
                                                           TargetComponents.DependsOn _3 
                   )
# 91 "Build/Parser.fsy"
                 : 'gentype_DependsOn));
# 675 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Variables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Build/Parser.fsy"
                                                                           TargetComponents.Step { Extension = _1; Command = _2; Parameters = _4 } 
                   )
# 93 "Build/Parser.fsy"
                 : 'gentype_Step));
# 688 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Build/Parser.fsy"
                                    _1 
                   )
# 96 "Build/Parser.fsy"
                 : 'gentype_String));
# 699 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Strings in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Build/Parser.fsy"
                                                           _2 
                   )
# 98 "Build/Parser.fsy"
                 : 'gentype_ListOfString));
# 710 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Build/Parser.fsy"
                                         [] 
                   )
# 100 "Build/Parser.fsy"
                 : 'gentype_Strings));
# 720 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Strings in
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Build/Parser.fsy"
                                            _1 @ [_2] 
                   )
# 101 "Build/Parser.fsy"
                 : 'gentype_Strings));
# 732 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Build/Parser.fsy"
                                         Map.empty 
                   )
# 104 "Build/Parser.fsy"
                 : 'gentype_Variables));
# 742 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Variables in
            let _2 = parseState.GetInput(2) :?> 'gentype_Variable in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Build/Parser.fsy"
                                                _1.Add _2 
                   )
# 105 "Build/Parser.fsy"
                 : 'gentype_Variables));
# 754 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Build/Parser.fsy"
                                                   (_1, _3) 
                   )
# 107 "Build/Parser.fsy"
                 : 'gentype_Variable));
# 766 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Build/Parser.fsy"
                                     Nothing 
                   )
# 110 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 776 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Build/Parser.fsy"
                                  Boolean true 
                   )
# 111 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 786 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Build/Parser.fsy"
                                   Boolean false 
                   )
# 112 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 796 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Build/Parser.fsy"
                                    String _1 
                   )
# 113 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 807 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Build/Parser.fsy"
                                      Variable _1 
                   )
# 114 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 818 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Build/Parser.fsy"
                                            InfixFunction (_1, Plus, _3) 
                   )
# 115 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 830 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Build/Parser.fsy"
                                                     Function (Trim, _3) 
                   )
# 116 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 841 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Build/Parser.fsy"
                                                      Function (Upper, _3) 
                   )
# 117 "Build/Parser.fsy"
                 : 'gentype_Expr));
# 852 "Build/Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Build/Parser.fsy"
                                                      Function (Lower, _3) 
                   )
# 118 "Build/Parser.fsy"
                 : 'gentype_Expr));
|]
# 864 "Build/Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 34;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Build lexer lexbuf : Terrabuild.Parser.Build.AST.Build =
    engine lexer lexbuf 0 :?> _
