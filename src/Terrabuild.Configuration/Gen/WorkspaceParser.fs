// Implementation file for parser generated by fsyacc
module internal Terrabuild.Configuration.Workspace.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "WorkspaceParser/Parser.fsy"
 
open Terrabuild.Configuration.AST
open Terrabuild.Configuration.Workspace.AST
open Terrabuild.Expressions


#if DEBUG
let debugPrint s = printfn "### %s" s
#else
let debugPrint s = ignore s
#endif


# 20 "Gen/WorkspaceParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | DEPENDS_ON
  | VARIABLES
  | CONTAINER
  | INIT
  | SCRIPT
  | DEFAULTS
  | TARGET
  | ENVIRONMENT
  | EXTENSION
  | EOF
  | TRIM
  | UPPER
  | LOWER
  | PLUS
  | COMMA
  | EQUAL
  | LPAREN
  | RPAREN
  | LSQBRACKET
  | RSQBRACKET
  | LBRACE
  | RBRACE
  | KEY of (string)
  | VARIABLE of (string)
  | IDENTIFIER of (string)
  | STRING of (string)
  | NOTHING
  | TRUE
  | FALSE
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_DEPENDS_ON
    | TOKEN_VARIABLES
    | TOKEN_CONTAINER
    | TOKEN_INIT
    | TOKEN_SCRIPT
    | TOKEN_DEFAULTS
    | TOKEN_TARGET
    | TOKEN_ENVIRONMENT
    | TOKEN_EXTENSION
    | TOKEN_EOF
    | TOKEN_TRIM
    | TOKEN_UPPER
    | TOKEN_LOWER
    | TOKEN_PLUS
    | TOKEN_COMMA
    | TOKEN_EQUAL
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LSQBRACKET
    | TOKEN_RSQBRACKET
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_KEY
    | TOKEN_VARIABLE
    | TOKEN_IDENTIFIER
    | TOKEN_STRING
    | TOKEN_NOTHING
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startWorkspace
    | NONTERM_Workspace
    | NONTERM_WorkspaceComponents
    | NONTERM_Target
    | NONTERM_TargetComponents
    | NONTERM_TargetDependsOn
    | NONTERM_Environment
    | NONTERM_EnvironmentComponents
    | NONTERM_EnvironmentVariables
    | NONTERM_Extension
    | NONTERM_ExtensionComponents
    | NONTERM_Container
    | NONTERM_Script
    | NONTERM_Defaults
    | NONTERM_String
    | NONTERM_ListOfString
    | NONTERM_Strings
    | NONTERM_ListOfTargets
    | NONTERM_Targets
    | NONTERM_StringVariables
    | NONTERM_StringVariable
    | NONTERM_Variables
    | NONTERM_Variable
    | NONTERM_Expr

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | DEPENDS_ON  -> 0 
  | VARIABLES  -> 1 
  | CONTAINER  -> 2 
  | INIT  -> 3 
  | SCRIPT  -> 4 
  | DEFAULTS  -> 5 
  | TARGET  -> 6 
  | ENVIRONMENT  -> 7 
  | EXTENSION  -> 8 
  | EOF  -> 9 
  | TRIM  -> 10 
  | UPPER  -> 11 
  | LOWER  -> 12 
  | PLUS  -> 13 
  | COMMA  -> 14 
  | EQUAL  -> 15 
  | LPAREN  -> 16 
  | RPAREN  -> 17 
  | LSQBRACKET  -> 18 
  | RSQBRACKET  -> 19 
  | LBRACE  -> 20 
  | RBRACE  -> 21 
  | KEY _ -> 22 
  | VARIABLE _ -> 23 
  | IDENTIFIER _ -> 24 
  | STRING _ -> 25 
  | NOTHING  -> 26 
  | TRUE  -> 27 
  | FALSE  -> 28 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_DEPENDS_ON 
  | 1 -> TOKEN_VARIABLES 
  | 2 -> TOKEN_CONTAINER 
  | 3 -> TOKEN_INIT 
  | 4 -> TOKEN_SCRIPT 
  | 5 -> TOKEN_DEFAULTS 
  | 6 -> TOKEN_TARGET 
  | 7 -> TOKEN_ENVIRONMENT 
  | 8 -> TOKEN_EXTENSION 
  | 9 -> TOKEN_EOF 
  | 10 -> TOKEN_TRIM 
  | 11 -> TOKEN_UPPER 
  | 12 -> TOKEN_LOWER 
  | 13 -> TOKEN_PLUS 
  | 14 -> TOKEN_COMMA 
  | 15 -> TOKEN_EQUAL 
  | 16 -> TOKEN_LPAREN 
  | 17 -> TOKEN_RPAREN 
  | 18 -> TOKEN_LSQBRACKET 
  | 19 -> TOKEN_RSQBRACKET 
  | 20 -> TOKEN_LBRACE 
  | 21 -> TOKEN_RBRACE 
  | 22 -> TOKEN_KEY 
  | 23 -> TOKEN_VARIABLE 
  | 24 -> TOKEN_IDENTIFIER 
  | 25 -> TOKEN_STRING 
  | 26 -> TOKEN_NOTHING 
  | 27 -> TOKEN_TRUE 
  | 28 -> TOKEN_FALSE 
  | 31 -> TOKEN_end_of_input
  | 29 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startWorkspace 
    | 1 -> NONTERM_Workspace 
    | 2 -> NONTERM_WorkspaceComponents 
    | 3 -> NONTERM_WorkspaceComponents 
    | 4 -> NONTERM_WorkspaceComponents 
    | 5 -> NONTERM_WorkspaceComponents 
    | 6 -> NONTERM_Target 
    | 7 -> NONTERM_TargetComponents 
    | 8 -> NONTERM_TargetComponents 
    | 9 -> NONTERM_TargetDependsOn 
    | 10 -> NONTERM_Environment 
    | 11 -> NONTERM_EnvironmentComponents 
    | 12 -> NONTERM_EnvironmentComponents 
    | 13 -> NONTERM_EnvironmentVariables 
    | 14 -> NONTERM_Extension 
    | 15 -> NONTERM_ExtensionComponents 
    | 16 -> NONTERM_ExtensionComponents 
    | 17 -> NONTERM_ExtensionComponents 
    | 18 -> NONTERM_ExtensionComponents 
    | 19 -> NONTERM_Container 
    | 20 -> NONTERM_Script 
    | 21 -> NONTERM_Defaults 
    | 22 -> NONTERM_String 
    | 23 -> NONTERM_ListOfString 
    | 24 -> NONTERM_Strings 
    | 25 -> NONTERM_Strings 
    | 26 -> NONTERM_ListOfTargets 
    | 27 -> NONTERM_Targets 
    | 28 -> NONTERM_Targets 
    | 29 -> NONTERM_StringVariables 
    | 30 -> NONTERM_StringVariables 
    | 31 -> NONTERM_StringVariable 
    | 32 -> NONTERM_Variables 
    | 33 -> NONTERM_Variables 
    | 34 -> NONTERM_Variable 
    | 35 -> NONTERM_Expr 
    | 36 -> NONTERM_Expr 
    | 37 -> NONTERM_Expr 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_Expr 
    | 44 -> NONTERM_Expr 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 31 
let _fsyacc_tagOfErrorTerminal = 29

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | DEPENDS_ON  -> "DEPENDS_ON" 
  | VARIABLES  -> "VARIABLES" 
  | CONTAINER  -> "CONTAINER" 
  | INIT  -> "INIT" 
  | SCRIPT  -> "SCRIPT" 
  | DEFAULTS  -> "DEFAULTS" 
  | TARGET  -> "TARGET" 
  | ENVIRONMENT  -> "ENVIRONMENT" 
  | EXTENSION  -> "EXTENSION" 
  | EOF  -> "EOF" 
  | TRIM  -> "TRIM" 
  | UPPER  -> "UPPER" 
  | LOWER  -> "LOWER" 
  | PLUS  -> "PLUS" 
  | COMMA  -> "COMMA" 
  | EQUAL  -> "EQUAL" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | LSQBRACKET  -> "LSQBRACKET" 
  | RSQBRACKET  -> "RSQBRACKET" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | KEY _ -> "KEY" 
  | VARIABLE _ -> "VARIABLE" 
  | IDENTIFIER _ -> "IDENTIFIER" 
  | STRING _ -> "STRING" 
  | NOTHING  -> "NOTHING" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | DEPENDS_ON  -> (null : System.Object) 
  | VARIABLES  -> (null : System.Object) 
  | CONTAINER  -> (null : System.Object) 
  | INIT  -> (null : System.Object) 
  | SCRIPT  -> (null : System.Object) 
  | DEFAULTS  -> (null : System.Object) 
  | TARGET  -> (null : System.Object) 
  | ENVIRONMENT  -> (null : System.Object) 
  | EXTENSION  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | TRIM  -> (null : System.Object) 
  | UPPER  -> (null : System.Object) 
  | LOWER  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LSQBRACKET  -> (null : System.Object) 
  | RSQBRACKET  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | KEY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VARIABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NOTHING  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 1us; 65535us; 2us; 4us; 1us; 65535us; 9us; 10us; 1us; 65535us; 10us; 12us; 1us; 65535us; 2us; 5us; 1us; 65535us; 17us; 18us; 1us; 65535us; 18us; 20us; 1us; 65535us; 2us; 6us; 1us; 65535us; 27us; 28us; 1us; 65535us; 28us; 30us; 1us; 65535us; 28us; 31us; 1us; 65535us; 28us; 32us; 3us; 65535us; 33us; 34us; 35us; 36us; 47us; 48us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 13us; 14us; 1us; 65535us; 42us; 43us; 1us; 65535us; 22us; 23us; 1us; 65535us; 23us; 46us; 2us; 65535us; 38us; 39us; 58us; 49us; 2us; 65535us; 39us; 50us; 49us; 50us; 5us; 65535us; 51us; 52us; 64us; 60us; 66us; 61us; 69us; 62us; 72us; 63us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 7us; 9us; 11us; 13us; 15us; 17us; 19us; 21us; 23us; 25us; 27us; 31us; 32us; 33us; 35us; 37us; 39us; 41us; 44us; 47us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 4us; 1us; 3us; 4us; 5us; 1us; 1us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 6us; 2us; 6us; 8us; 1us; 6us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 10us; 2us; 10us; 12us; 1us; 10us; 1us; 12us; 1us; 13us; 1us; 13us; 2us; 13us; 30us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 4us; 14us; 16us; 17us; 18us; 1us; 14us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 2us; 21us; 33us; 1us; 21us; 1us; 22us; 1us; 26us; 2us; 26us; 28us; 1us; 26us; 1us; 28us; 1us; 30us; 1us; 31us; 1us; 31us; 2us; 33us; 40us; 1us; 33us; 1us; 34us; 2us; 34us; 41us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 1us; 40us; 2us; 41us; 41us; 2us; 41us; 42us; 2us; 41us; 43us; 2us; 41us; 44us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 44us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 9us; 11us; 13us; 15us; 17us; 19us; 21us; 23us; 26us; 28us; 30us; 32us; 34us; 36us; 38us; 40us; 43us; 45us; 47us; 49us; 51us; 54us; 56us; 58us; 60us; 62us; 67us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 90us; 92us; 94us; 96us; 99us; 101us; 103us; 105us; 107us; 109us; 112us; 114us; 116us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 136us; 139us; 142us; 145us; 147us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; |]
let _fsyacc_action_rows = 74
let _fsyacc_actionTableElements = [|0us; 16386us; 0us; 49152us; 4us; 32768us; 6us; 7us; 7us; 15us; 8us; 25us; 9us; 3us; 0us; 16385us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 24us; 8us; 1us; 32768us; 20us; 9us; 0us; 16391us; 2us; 32768us; 0us; 13us; 21us; 11us; 0us; 16390us; 0us; 16392us; 1us; 32768us; 18us; 42us; 0us; 16393us; 1us; 32768us; 24us; 16us; 1us; 32768us; 20us; 17us; 0us; 16395us; 2us; 32768us; 1us; 21us; 21us; 19us; 0us; 16394us; 0us; 16396us; 1us; 32768us; 20us; 22us; 0us; 16413us; 2us; 32768us; 21us; 24us; 22us; 47us; 0us; 16397us; 1us; 32768us; 24us; 26us; 1us; 32768us; 20us; 27us; 0us; 16399us; 4us; 32768us; 2us; 33us; 4us; 35us; 5us; 37us; 21us; 29us; 0us; 16398us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 1us; 32768us; 25us; 41us; 0us; 16403us; 1us; 32768us; 25us; 41us; 0us; 16404us; 1us; 32768us; 20us; 38us; 0us; 16416us; 2us; 32768us; 21us; 40us; 22us; 51us; 0us; 16405us; 0us; 16406us; 0us; 16411us; 2us; 32768us; 19us; 44us; 24us; 45us; 0us; 16410us; 0us; 16412us; 0us; 16414us; 1us; 32768us; 25us; 41us; 0us; 16415us; 2us; 32768us; 21us; 59us; 22us; 51us; 0us; 16417us; 9us; 32768us; 10us; 65us; 11us; 68us; 12us; 71us; 20us; 58us; 23us; 57us; 25us; 56us; 26us; 53us; 27us; 54us; 28us; 55us; 1us; 16418us; 13us; 64us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16416us; 0us; 16424us; 0us; 16425us; 2us; 32768us; 13us; 64us; 17us; 67us; 2us; 32768us; 13us; 64us; 17us; 70us; 2us; 32768us; 13us; 64us; 17us; 73us; 9us; 32768us; 10us; 65us; 11us; 68us; 12us; 71us; 20us; 58us; 23us; 57us; 25us; 56us; 26us; 53us; 27us; 54us; 28us; 55us; 1us; 32768us; 16us; 66us; 9us; 32768us; 10us; 65us; 11us; 68us; 12us; 71us; 20us; 58us; 23us; 57us; 25us; 56us; 26us; 53us; 27us; 54us; 28us; 55us; 0us; 16426us; 1us; 32768us; 16us; 69us; 9us; 32768us; 10us; 65us; 11us; 68us; 12us; 71us; 20us; 58us; 23us; 57us; 25us; 56us; 26us; 53us; 27us; 54us; 28us; 55us; 0us; 16427us; 1us; 32768us; 16us; 72us; 9us; 32768us; 10us; 65us; 11us; 68us; 12us; 71us; 20us; 58us; 23us; 57us; 25us; 56us; 26us; 53us; 27us; 54us; 28us; 55us; 0us; 16428us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 1us; 2us; 7us; 8us; 9us; 10us; 11us; 13us; 15us; 16us; 19us; 20us; 21us; 23us; 24us; 26us; 28us; 29us; 32us; 33us; 34us; 36us; 37us; 40us; 41us; 43us; 45us; 46us; 51us; 52us; 53us; 54us; 55us; 57us; 58us; 60us; 61us; 63us; 64us; 67us; 68us; 69us; 70us; 73us; 74us; 75us; 76us; 78us; 79us; 82us; 83us; 93us; 95us; 96us; 97us; 98us; 99us; 100us; 101us; 102us; 103us; 106us; 109us; 112us; 122us; 124us; 134us; 135us; 137us; 147us; 148us; 150us; 160us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 5us; 0us; 2us; 2us; 5us; 0us; 2us; 4us; 5us; 0us; 2us; 2us; 2us; 2us; 2us; 4us; 1us; 3us; 0us; 2us; 3us; 0us; 2us; 0us; 2us; 2us; 0us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 4us; 4us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 4us; 5us; 6us; 7us; 7us; 8us; 9us; 10us; 10us; 10us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 16us; 17us; 18us; 18us; 19us; 19us; 20us; 21us; 21us; 22us; 23us; 23us; 23us; 23us; 23us; 23us; 23us; 23us; 23us; 23us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 16390us; 16392us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 16394us; 16396us; 65535us; 65535us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 16398us; 16400us; 16401us; 16402us; 65535us; 16403us; 65535us; 16404us; 65535us; 65535us; 65535us; 16405us; 16406us; 65535us; 65535us; 16410us; 16412us; 16414us; 65535us; 16415us; 65535us; 16417us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 16423us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 16427us; 65535us; 65535us; 16428us; |]
let _fsyacc_reductions ()  =    [| 
# 310 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Terrabuild.Configuration.Workspace.AST.Workspace in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startWorkspace));
# 319 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_WorkspaceComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "WorkspaceParser/Parser.fsy"
                                                     _1 
                   )
# 41 "WorkspaceParser/Parser.fsy"
                 : Terrabuild.Configuration.Workspace.AST.Workspace));
# 330 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "WorkspaceParser/Parser.fsy"
                                         Workspace.Empty 
                   )
# 44 "WorkspaceParser/Parser.fsy"
                 : 'gentype_WorkspaceComponents));
# 340 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_WorkspaceComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Target in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "WorkspaceParser/Parser.fsy"
                                                        _1.Patch _2 
                   )
# 45 "WorkspaceParser/Parser.fsy"
                 : 'gentype_WorkspaceComponents));
# 352 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_WorkspaceComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Environment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "WorkspaceParser/Parser.fsy"
                                                             _1.Patch _2 
                   )
# 46 "WorkspaceParser/Parser.fsy"
                 : 'gentype_WorkspaceComponents));
# 364 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_WorkspaceComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Extension in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "WorkspaceParser/Parser.fsy"
                                                           _1.Patch _2 
                   )
# 47 "WorkspaceParser/Parser.fsy"
                 : 'gentype_WorkspaceComponents));
# 376 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_TargetComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "WorkspaceParser/Parser.fsy"
                                                                              WorkspaceComponents.Target (_2, _4) 
                   )
# 50 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Target));
# 388 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "WorkspaceParser/Parser.fsy"
                                         Target.Empty 
                   )
# 52 "WorkspaceParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 398 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetDependsOn in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "WorkspaceParser/Parser.fsy"
                                                              _1.Patch _2 
                   )
# 53 "WorkspaceParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 410 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ListOfTargets in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "WorkspaceParser/Parser.fsy"
                                                      TargetComponents.DependsOn _2 
                   )
# 55 "WorkspaceParser/Parser.fsy"
                 : 'gentype_TargetDependsOn));
# 421 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_EnvironmentComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "WorkspaceParser/Parser.fsy"
                                                                                        WorkspaceComponents.Environment (_2, _4) 
                   )
# 58 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Environment));
# 433 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "WorkspaceParser/Parser.fsy"
                                         Environment.Empty 
                   )
# 60 "WorkspaceParser/Parser.fsy"
                 : 'gentype_EnvironmentComponents));
# 443 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_EnvironmentComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_EnvironmentVariables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "WorkspaceParser/Parser.fsy"
                                                                        _1.Patch _2 
                   )
# 61 "WorkspaceParser/Parser.fsy"
                 : 'gentype_EnvironmentComponents));
# 455 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StringVariables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "WorkspaceParser/Parser.fsy"
                                                                     EnvironmentComponents.Variables _3 
                   )
# 63 "WorkspaceParser/Parser.fsy"
                 : 'gentype_EnvironmentVariables));
# 466 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_ExtensionComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "WorkspaceParser/Parser.fsy"
                                                                                    WorkspaceComponents.Extension (_2, _4) 
                   )
# 66 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Extension));
# 478 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "WorkspaceParser/Parser.fsy"
                                         Extension.Empty 
                   )
# 68 "WorkspaceParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 488 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Container in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "WorkspaceParser/Parser.fsy"
                                                           _1.Patch _2 
                   )
# 69 "WorkspaceParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 500 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Script in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "WorkspaceParser/Parser.fsy"
                                                        _1.Patch _2 
                   )
# 70 "WorkspaceParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 512 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Defaults in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "WorkspaceParser/Parser.fsy"
                                                          _1.Patch _2 
                   )
# 71 "WorkspaceParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 524 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "WorkspaceParser/Parser.fsy"
                                              ExtensionComponents.Container _2 
                   )
# 73 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Container));
# 535 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "WorkspaceParser/Parser.fsy"
                                           ExtensionComponents.Script _2 
                   )
# 75 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Script));
# 546 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Variables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "WorkspaceParser/Parser.fsy"
                                                              ExtensionComponents.Defaults _3 
                   )
# 77 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Defaults));
# 557 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "WorkspaceParser/Parser.fsy"
                                    _1 
                   )
# 80 "WorkspaceParser/Parser.fsy"
                 : 'gentype_String));
# 568 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Strings in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "WorkspaceParser/Parser.fsy"
                                                           _2 
                   )
# 82 "WorkspaceParser/Parser.fsy"
                 : 'gentype_ListOfString));
# 579 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "WorkspaceParser/Parser.fsy"
                                         [] 
                   )
# 84 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Strings));
# 589 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Strings in
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "WorkspaceParser/Parser.fsy"
                                            _1 @ [_2] 
                   )
# 85 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Strings));
# 601 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Targets in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "WorkspaceParser/Parser.fsy"
                                                           _2 
                   )
# 88 "WorkspaceParser/Parser.fsy"
                 : 'gentype_ListOfTargets));
# 612 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "WorkspaceParser/Parser.fsy"
                                         [] 
                   )
# 90 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Targets));
# 622 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Targets in
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "WorkspaceParser/Parser.fsy"
                                                _1 @ [_2] 
                   )
# 91 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Targets));
# 634 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "WorkspaceParser/Parser.fsy"
                                         Map.empty 
                   )
# 94 "WorkspaceParser/Parser.fsy"
                 : 'gentype_StringVariables));
# 644 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StringVariables in
            let _2 = parseState.GetInput(2) :?> 'gentype_StringVariable in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "WorkspaceParser/Parser.fsy"
                                                            _1.Add _2 
                   )
# 95 "WorkspaceParser/Parser.fsy"
                 : 'gentype_StringVariables));
# 656 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "WorkspaceParser/Parser.fsy"
                                        (_1, _2) 
                   )
# 97 "WorkspaceParser/Parser.fsy"
                 : 'gentype_StringVariable));
# 668 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "WorkspaceParser/Parser.fsy"
                                         Map.empty 
                   )
# 100 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Variables));
# 678 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Variables in
            let _2 = parseState.GetInput(2) :?> 'gentype_Variable in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "WorkspaceParser/Parser.fsy"
                                                _1.Add _2 
                   )
# 101 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Variables));
# 690 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "WorkspaceParser/Parser.fsy"
                                      (_1, _2) 
                   )
# 103 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Variable));
# 702 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "WorkspaceParser/Parser.fsy"
                                     Expr.Nothing 
                   )
# 106 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 712 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "WorkspaceParser/Parser.fsy"
                                  Expr.Boolean true 
                   )
# 107 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 722 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "WorkspaceParser/Parser.fsy"
                                   Expr.Boolean false 
                   )
# 108 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 732 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "WorkspaceParser/Parser.fsy"
                                    Expr.String _1 
                   )
# 109 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 743 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "WorkspaceParser/Parser.fsy"
                                      Expr.Variable _1 
                   )
# 110 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 754 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Variables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "WorkspaceParser/Parser.fsy"
                                                     Expr.Map _2 
                   )
# 111 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 765 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "WorkspaceParser/Parser.fsy"
                                            Expr.Function (Function.Plus, [_1; _3]) 
                   )
# 112 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 777 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "WorkspaceParser/Parser.fsy"
                                                     Expr.Function (Function.Trim, [_3]) 
                   )
# 113 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 788 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "WorkspaceParser/Parser.fsy"
                                                      Expr.Function (Function.Upper, [_3]) 
                   )
# 114 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
# 799 "Gen/WorkspaceParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "WorkspaceParser/Parser.fsy"
                                                      Expr.Function (Function.Lower, [_3]) 
                   )
# 115 "WorkspaceParser/Parser.fsy"
                 : 'gentype_Expr));
|]
# 811 "Gen/WorkspaceParser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 32;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Workspace lexer lexbuf : Terrabuild.Configuration.Workspace.AST.Workspace =
    engine lexer lexbuf 0 :?> _
