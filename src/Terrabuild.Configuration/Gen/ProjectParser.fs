// Implementation file for parser generated by fsyacc
module internal Terrabuild.Configuration.Project.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "ProjectParser/Parser.fsy"
 
open Terrabuild.Configuration.AST
open Terrabuild.Configuration.Project.AST
open Terrabuild.Expressions


#if DEBUG
let debugPrint s = printfn "### %s" s
#else
let debugPrint s = ignore s
#endif


# 20 "Gen/ProjectParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | DEPENDENCIES
  | OUTPUTS
  | IGNORES
  | LABELS
  | VARIABLES
  | CONTAINER
  | INIT
  | SCRIPT
  | DEPENDS_ON
  | REBUILD
  | DEFAULTS
  | PROJECT
  | EXTENSION
  | TARGET
  | EOF
  | TRIM
  | UPPER
  | LOWER
  | VERSION
  | COALESCE
  | MINUS
  | PLUS
  | COMMA
  | EQUAL
  | LPAREN
  | RPAREN
  | DOT_LSQBRACKET
  | LSQBRACKET
  | RSQBRACKET
  | LBRACE
  | RBRACE
  | NUMBER of (int)
  | KEY of (string)
  | VARIABLE of (string)
  | TARGET_IDENTIFIER of (string)
  | EXTENSION_IDENTIFIER of (string)
  | IDENTIFIER of (string)
  | STRING of (string)
  | NOTHING
  | TRUE
  | FALSE
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_DEPENDENCIES
    | TOKEN_OUTPUTS
    | TOKEN_IGNORES
    | TOKEN_LABELS
    | TOKEN_VARIABLES
    | TOKEN_CONTAINER
    | TOKEN_INIT
    | TOKEN_SCRIPT
    | TOKEN_DEPENDS_ON
    | TOKEN_REBUILD
    | TOKEN_DEFAULTS
    | TOKEN_PROJECT
    | TOKEN_EXTENSION
    | TOKEN_TARGET
    | TOKEN_EOF
    | TOKEN_TRIM
    | TOKEN_UPPER
    | TOKEN_LOWER
    | TOKEN_VERSION
    | TOKEN_COALESCE
    | TOKEN_MINUS
    | TOKEN_PLUS
    | TOKEN_COMMA
    | TOKEN_EQUAL
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_DOT_LSQBRACKET
    | TOKEN_LSQBRACKET
    | TOKEN_RSQBRACKET
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_NUMBER
    | TOKEN_KEY
    | TOKEN_VARIABLE
    | TOKEN_TARGET_IDENTIFIER
    | TOKEN_EXTENSION_IDENTIFIER
    | TOKEN_IDENTIFIER
    | TOKEN_STRING
    | TOKEN_NOTHING
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startProjectFile
    | NONTERM_ProjectFile
    | NONTERM_ProjectFileComponents
    | NONTERM_Extension
    | NONTERM_ExtensionComponents
    | NONTERM_ExtensionContainer
    | NONTERM_ExtensionVariables
    | NONTERM_ExtensionScript
    | NONTERM_ExtensionDefaults
    | NONTERM_Project
    | NONTERM_ProjectComponents
    | NONTERM_ProjectDependencies
    | NONTERM_ProjectOutputs
    | NONTERM_ProjectIgnores
    | NONTERM_ProjectLabels
    | NONTERM_Target
    | NONTERM_TargetComponents
    | NONTERM_TargetDependsOn
    | NONTERM_TargetRebuild
    | NONTERM_TargetOutputs
    | NONTERM_TargetStep
    | NONTERM_Bool
    | NONTERM_String
    | NONTERM_ListOfString
    | NONTERM_Strings
    | NONTERM_ListOfTargetIdentifiers
    | NONTERM_TargetIdentifiers
    | NONTERM_TargetIdentifier
    | NONTERM_ExtensionIdentifier
    | NONTERM_Expr
    | NONTERM_ExprIndex
    | NONTERM_ExprList
    | NONTERM_ExprListContent
    | NONTERM_ExprMap
    | NONTERM_ExprMapContent

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | DEPENDENCIES  -> 0 
  | OUTPUTS  -> 1 
  | IGNORES  -> 2 
  | LABELS  -> 3 
  | VARIABLES  -> 4 
  | CONTAINER  -> 5 
  | INIT  -> 6 
  | SCRIPT  -> 7 
  | DEPENDS_ON  -> 8 
  | REBUILD  -> 9 
  | DEFAULTS  -> 10 
  | PROJECT  -> 11 
  | EXTENSION  -> 12 
  | TARGET  -> 13 
  | EOF  -> 14 
  | TRIM  -> 15 
  | UPPER  -> 16 
  | LOWER  -> 17 
  | VERSION  -> 18 
  | COALESCE  -> 19 
  | MINUS  -> 20 
  | PLUS  -> 21 
  | COMMA  -> 22 
  | EQUAL  -> 23 
  | LPAREN  -> 24 
  | RPAREN  -> 25 
  | DOT_LSQBRACKET  -> 26 
  | LSQBRACKET  -> 27 
  | RSQBRACKET  -> 28 
  | LBRACE  -> 29 
  | RBRACE  -> 30 
  | NUMBER _ -> 31 
  | KEY _ -> 32 
  | VARIABLE _ -> 33 
  | TARGET_IDENTIFIER _ -> 34 
  | EXTENSION_IDENTIFIER _ -> 35 
  | IDENTIFIER _ -> 36 
  | STRING _ -> 37 
  | NOTHING  -> 38 
  | TRUE  -> 39 
  | FALSE  -> 40 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_DEPENDENCIES 
  | 1 -> TOKEN_OUTPUTS 
  | 2 -> TOKEN_IGNORES 
  | 3 -> TOKEN_LABELS 
  | 4 -> TOKEN_VARIABLES 
  | 5 -> TOKEN_CONTAINER 
  | 6 -> TOKEN_INIT 
  | 7 -> TOKEN_SCRIPT 
  | 8 -> TOKEN_DEPENDS_ON 
  | 9 -> TOKEN_REBUILD 
  | 10 -> TOKEN_DEFAULTS 
  | 11 -> TOKEN_PROJECT 
  | 12 -> TOKEN_EXTENSION 
  | 13 -> TOKEN_TARGET 
  | 14 -> TOKEN_EOF 
  | 15 -> TOKEN_TRIM 
  | 16 -> TOKEN_UPPER 
  | 17 -> TOKEN_LOWER 
  | 18 -> TOKEN_VERSION 
  | 19 -> TOKEN_COALESCE 
  | 20 -> TOKEN_MINUS 
  | 21 -> TOKEN_PLUS 
  | 22 -> TOKEN_COMMA 
  | 23 -> TOKEN_EQUAL 
  | 24 -> TOKEN_LPAREN 
  | 25 -> TOKEN_RPAREN 
  | 26 -> TOKEN_DOT_LSQBRACKET 
  | 27 -> TOKEN_LSQBRACKET 
  | 28 -> TOKEN_RSQBRACKET 
  | 29 -> TOKEN_LBRACE 
  | 30 -> TOKEN_RBRACE 
  | 31 -> TOKEN_NUMBER 
  | 32 -> TOKEN_KEY 
  | 33 -> TOKEN_VARIABLE 
  | 34 -> TOKEN_TARGET_IDENTIFIER 
  | 35 -> TOKEN_EXTENSION_IDENTIFIER 
  | 36 -> TOKEN_IDENTIFIER 
  | 37 -> TOKEN_STRING 
  | 38 -> TOKEN_NOTHING 
  | 39 -> TOKEN_TRUE 
  | 40 -> TOKEN_FALSE 
  | 43 -> TOKEN_end_of_input
  | 41 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startProjectFile 
    | 1 -> NONTERM_ProjectFile 
    | 2 -> NONTERM_ProjectFileComponents 
    | 3 -> NONTERM_ProjectFileComponents 
    | 4 -> NONTERM_ProjectFileComponents 
    | 5 -> NONTERM_ProjectFileComponents 
    | 6 -> NONTERM_Extension 
    | 7 -> NONTERM_ExtensionComponents 
    | 8 -> NONTERM_ExtensionComponents 
    | 9 -> NONTERM_ExtensionComponents 
    | 10 -> NONTERM_ExtensionComponents 
    | 11 -> NONTERM_ExtensionComponents 
    | 12 -> NONTERM_ExtensionContainer 
    | 13 -> NONTERM_ExtensionVariables 
    | 14 -> NONTERM_ExtensionScript 
    | 15 -> NONTERM_ExtensionDefaults 
    | 16 -> NONTERM_Project 
    | 17 -> NONTERM_Project 
    | 18 -> NONTERM_Project 
    | 19 -> NONTERM_ProjectComponents 
    | 20 -> NONTERM_ProjectComponents 
    | 21 -> NONTERM_ProjectComponents 
    | 22 -> NONTERM_ProjectComponents 
    | 23 -> NONTERM_ProjectComponents 
    | 24 -> NONTERM_ProjectDependencies 
    | 25 -> NONTERM_ProjectOutputs 
    | 26 -> NONTERM_ProjectIgnores 
    | 27 -> NONTERM_ProjectLabels 
    | 28 -> NONTERM_Target 
    | 29 -> NONTERM_TargetComponents 
    | 30 -> NONTERM_TargetComponents 
    | 31 -> NONTERM_TargetComponents 
    | 32 -> NONTERM_TargetComponents 
    | 33 -> NONTERM_TargetComponents 
    | 34 -> NONTERM_TargetDependsOn 
    | 35 -> NONTERM_TargetRebuild 
    | 36 -> NONTERM_TargetOutputs 
    | 37 -> NONTERM_TargetStep 
    | 38 -> NONTERM_TargetStep 
    | 39 -> NONTERM_Bool 
    | 40 -> NONTERM_Bool 
    | 41 -> NONTERM_String 
    | 42 -> NONTERM_ListOfString 
    | 43 -> NONTERM_Strings 
    | 44 -> NONTERM_Strings 
    | 45 -> NONTERM_ListOfTargetIdentifiers 
    | 46 -> NONTERM_TargetIdentifiers 
    | 47 -> NONTERM_TargetIdentifiers 
    | 48 -> NONTERM_TargetIdentifier 
    | 49 -> NONTERM_TargetIdentifier 
    | 50 -> NONTERM_ExtensionIdentifier 
    | 51 -> NONTERM_ExtensionIdentifier 
    | 52 -> NONTERM_Expr 
    | 53 -> NONTERM_Expr 
    | 54 -> NONTERM_Expr 
    | 55 -> NONTERM_Expr 
    | 56 -> NONTERM_Expr 
    | 57 -> NONTERM_Expr 
    | 58 -> NONTERM_Expr 
    | 59 -> NONTERM_Expr 
    | 60 -> NONTERM_Expr 
    | 61 -> NONTERM_Expr 
    | 62 -> NONTERM_Expr 
    | 63 -> NONTERM_Expr 
    | 64 -> NONTERM_Expr 
    | 65 -> NONTERM_Expr 
    | 66 -> NONTERM_Expr 
    | 67 -> NONTERM_Expr 
    | 68 -> NONTERM_ExprIndex 
    | 69 -> NONTERM_ExprIndex 
    | 70 -> NONTERM_ExprList 
    | 71 -> NONTERM_ExprListContent 
    | 72 -> NONTERM_ExprListContent 
    | 73 -> NONTERM_ExprMap 
    | 74 -> NONTERM_ExprMapContent 
    | 75 -> NONTERM_ExprMapContent 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 43 
let _fsyacc_tagOfErrorTerminal = 41

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | DEPENDENCIES  -> "DEPENDENCIES" 
  | OUTPUTS  -> "OUTPUTS" 
  | IGNORES  -> "IGNORES" 
  | LABELS  -> "LABELS" 
  | VARIABLES  -> "VARIABLES" 
  | CONTAINER  -> "CONTAINER" 
  | INIT  -> "INIT" 
  | SCRIPT  -> "SCRIPT" 
  | DEPENDS_ON  -> "DEPENDS_ON" 
  | REBUILD  -> "REBUILD" 
  | DEFAULTS  -> "DEFAULTS" 
  | PROJECT  -> "PROJECT" 
  | EXTENSION  -> "EXTENSION" 
  | TARGET  -> "TARGET" 
  | EOF  -> "EOF" 
  | TRIM  -> "TRIM" 
  | UPPER  -> "UPPER" 
  | LOWER  -> "LOWER" 
  | VERSION  -> "VERSION" 
  | COALESCE  -> "COALESCE" 
  | MINUS  -> "MINUS" 
  | PLUS  -> "PLUS" 
  | COMMA  -> "COMMA" 
  | EQUAL  -> "EQUAL" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | DOT_LSQBRACKET  -> "DOT_LSQBRACKET" 
  | LSQBRACKET  -> "LSQBRACKET" 
  | RSQBRACKET  -> "RSQBRACKET" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | NUMBER _ -> "NUMBER" 
  | KEY _ -> "KEY" 
  | VARIABLE _ -> "VARIABLE" 
  | TARGET_IDENTIFIER _ -> "TARGET_IDENTIFIER" 
  | EXTENSION_IDENTIFIER _ -> "EXTENSION_IDENTIFIER" 
  | IDENTIFIER _ -> "IDENTIFIER" 
  | STRING _ -> "STRING" 
  | NOTHING  -> "NOTHING" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | DEPENDENCIES  -> (null : System.Object) 
  | OUTPUTS  -> (null : System.Object) 
  | IGNORES  -> (null : System.Object) 
  | LABELS  -> (null : System.Object) 
  | VARIABLES  -> (null : System.Object) 
  | CONTAINER  -> (null : System.Object) 
  | INIT  -> (null : System.Object) 
  | SCRIPT  -> (null : System.Object) 
  | DEPENDS_ON  -> (null : System.Object) 
  | REBUILD  -> (null : System.Object) 
  | DEFAULTS  -> (null : System.Object) 
  | PROJECT  -> (null : System.Object) 
  | EXTENSION  -> (null : System.Object) 
  | TARGET  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | TRIM  -> (null : System.Object) 
  | UPPER  -> (null : System.Object) 
  | LOWER  -> (null : System.Object) 
  | VERSION  -> (null : System.Object) 
  | COALESCE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | DOT_LSQBRACKET  -> (null : System.Object) 
  | LSQBRACKET  -> (null : System.Object) 
  | RSQBRACKET  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | NUMBER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VARIABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TARGET_IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EXTENSION_IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NOTHING  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 1us; 65535us; 2us; 5us; 1us; 65535us; 9us; 10us; 1us; 65535us; 10us; 12us; 1us; 65535us; 10us; 13us; 1us; 65535us; 10us; 14us; 1us; 65535us; 10us; 15us; 1us; 65535us; 2us; 4us; 2us; 65535us; 29us; 30us; 33us; 34us; 2us; 65535us; 30us; 36us; 34us; 36us; 2us; 65535us; 30us; 37us; 34us; 37us; 2us; 65535us; 30us; 38us; 34us; 38us; 2us; 65535us; 30us; 39us; 34us; 39us; 1us; 65535us; 2us; 6us; 1us; 65535us; 54us; 55us; 1us; 65535us; 55us; 57us; 1us; 65535us; 55us; 58us; 1us; 65535us; 55us; 59us; 1us; 65535us; 55us; 60us; 1us; 65535us; 65us; 66us; 3us; 65535us; 17us; 18us; 23us; 24us; 77us; 79us; 6us; 65535us; 20us; 21us; 41us; 42us; 44us; 45us; 47us; 48us; 50us; 51us; 68us; 69us; 1us; 65535us; 76us; 77us; 1us; 65535us; 62us; 63us; 1us; 65535us; 80us; 81us; 1us; 65535us; 81us; 83us; 3us; 65535us; 7us; 8us; 28us; 32us; 55us; 70us; 10us; 65535us; 106us; 96us; 107us; 97us; 109us; 98us; 112us; 99us; 115us; 100us; 118us; 101us; 120us; 103us; 123us; 102us; 126us; 104us; 131us; 105us; 1us; 65535us; 120us; 121us; 10us; 65535us; 106us; 94us; 107us; 94us; 109us; 94us; 112us; 94us; 115us; 94us; 118us; 94us; 120us; 94us; 123us; 94us; 126us; 94us; 131us; 94us; 1us; 65535us; 125us; 126us; 12us; 65535us; 26us; 27us; 71us; 72us; 106us; 95us; 107us; 95us; 109us; 95us; 112us; 95us; 115us; 95us; 118us; 95us; 120us; 95us; 123us; 95us; 126us; 95us; 131us; 95us; 1us; 65535us; 128us; 129us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 7us; 9us; 11us; 13us; 15us; 17us; 19us; 22us; 25us; 28us; 31us; 34us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 52us; 59us; 61us; 63us; 65us; 67us; 71us; 82us; 84us; 95us; 97us; 110us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 4us; 1us; 3us; 4us; 5us; 1us; 1us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 6us; 5us; 6us; 8us; 9us; 10us; 11us; 1us; 6us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 3us; 16us; 17us; 18us; 1us; 16us; 5us; 16us; 20us; 21us; 22us; 23us; 1us; 16us; 2us; 17us; 18us; 1us; 17us; 5us; 17us; 20us; 21us; 22us; 23us; 1us; 17us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 28us; 5us; 28us; 30us; 31us; 32us; 33us; 1us; 28us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 2us; 37us; 38us; 1us; 38us; 1us; 39us; 1us; 40us; 1us; 41us; 1us; 42us; 2us; 42us; 44us; 1us; 42us; 1us; 44us; 1us; 45us; 2us; 45us; 47us; 1us; 45us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 5us; 60us; 60us; 61us; 66us; 67us; 5us; 60us; 61us; 61us; 66us; 67us; 5us; 60us; 61us; 62us; 66us; 67us; 5us; 60us; 61us; 63us; 66us; 67us; 5us; 60us; 61us; 64us; 66us; 67us; 5us; 60us; 61us; 65us; 66us; 67us; 5us; 60us; 61us; 66us; 67us; 67us; 5us; 60us; 61us; 66us; 67us; 68us; 5us; 60us; 61us; 66us; 67us; 72us; 5us; 60us; 61us; 66us; 67us; 75us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 66us; 1us; 66us; 1us; 67us; 1us; 69us; 1us; 70us; 2us; 70us; 72us; 1us; 70us; 1us; 73us; 2us; 73us; 75us; 1us; 73us; 1us; 75us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 9us; 11us; 13us; 15us; 17us; 19us; 21us; 23us; 29us; 31us; 33us; 35us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 67us; 69us; 75us; 77us; 80us; 82us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 134us; 136us; 138us; 140us; 142us; 144us; 146us; 148us; 150us; 152us; 154us; 156us; 158us; 160us; 162us; 165us; 168us; 170us; 172us; 174us; 176us; 178us; 181us; 183us; 185us; 187us; 190us; 192us; 194us; 196us; 198us; 200us; 202us; 204us; 206us; 208us; 210us; 212us; 214us; 216us; 218us; 224us; 230us; 236us; 242us; 248us; 254us; 260us; 266us; 272us; 278us; 280us; 282us; 284us; 286us; 288us; 290us; 292us; 294us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 321us; 323us; 325us; 328us; 330us; |]
let _fsyacc_action_rows = 132
let _fsyacc_actionTableElements = [|0us; 16386us; 0us; 49152us; 4us; 32768us; 11us; 28us; 12us; 7us; 13us; 52us; 14us; 3us; 0us; 16385us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 2us; 32768us; 35us; 86us; 36us; 87us; 1us; 32768us; 29us; 9us; 0us; 16391us; 5us; 32768us; 4us; 19us; 5us; 16us; 7us; 22us; 10us; 25us; 30us; 11us; 0us; 16390us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 1us; 32768us; 23us; 17us; 1us; 32768us; 37us; 75us; 0us; 16396us; 1us; 32768us; 23us; 20us; 1us; 32768us; 27us; 76us; 0us; 16397us; 1us; 32768us; 23us; 23us; 1us; 32768us; 37us; 75us; 0us; 16398us; 1us; 32768us; 23us; 26us; 1us; 32768us; 29us; 128us; 0us; 16399us; 3us; 32768us; 29us; 29us; 35us; 86us; 36us; 87us; 0us; 16403us; 5us; 32768us; 0us; 40us; 1us; 43us; 2us; 46us; 3us; 49us; 30us; 31us; 0us; 16400us; 1us; 16402us; 29us; 33us; 0us; 16403us; 5us; 32768us; 0us; 40us; 1us; 43us; 2us; 46us; 3us; 49us; 30us; 35us; 0us; 16401us; 0us; 16404us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 1us; 32768us; 23us; 41us; 1us; 32768us; 27us; 76us; 0us; 16408us; 1us; 32768us; 23us; 44us; 1us; 32768us; 27us; 76us; 0us; 16409us; 1us; 32768us; 23us; 47us; 1us; 32768us; 27us; 76us; 0us; 16410us; 1us; 32768us; 23us; 50us; 1us; 32768us; 27us; 76us; 0us; 16411us; 1us; 32768us; 36us; 53us; 1us; 32768us; 29us; 54us; 0us; 16413us; 6us; 32768us; 1us; 67us; 8us; 61us; 9us; 64us; 30us; 56us; 35us; 86us; 36us; 87us; 0us; 16412us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 1us; 32768us; 23us; 62us; 1us; 32768us; 27us; 80us; 0us; 16418us; 1us; 32768us; 23us; 65us; 2us; 32768us; 39us; 73us; 40us; 74us; 0us; 16419us; 1us; 32768us; 23us; 68us; 1us; 32768us; 27us; 76us; 0us; 16420us; 1us; 32768us; 36us; 71us; 1us; 16421us; 29us; 128us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 0us; 16427us; 2us; 32768us; 28us; 78us; 37us; 75us; 0us; 16426us; 0us; 16428us; 0us; 16430us; 3us; 32768us; 28us; 82us; 34us; 84us; 36us; 85us; 0us; 16429us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 0us; 16434us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 0us; 16443us; 3us; 16444us; 19us; 123us; 20us; 107us; 26us; 120us; 4us; 16445us; 19us; 123us; 20us; 107us; 21us; 106us; 26us; 120us; 5us; 32768us; 19us; 123us; 20us; 107us; 21us; 106us; 25us; 110us; 26us; 120us; 5us; 32768us; 19us; 123us; 20us; 107us; 21us; 106us; 25us; 113us; 26us; 120us; 5us; 32768us; 19us; 123us; 20us; 107us; 21us; 106us; 25us; 116us; 26us; 120us; 5us; 32768us; 19us; 123us; 20us; 107us; 21us; 106us; 25us; 119us; 26us; 120us; 4us; 16451us; 19us; 123us; 20us; 107us; 21us; 106us; 26us; 120us; 4us; 16452us; 19us; 123us; 20us; 107us; 21us; 106us; 26us; 120us; 4us; 16456us; 19us; 123us; 20us; 107us; 21us; 106us; 26us; 120us; 4us; 16459us; 19us; 123us; 20us; 107us; 21us; 106us; 26us; 120us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 1us; 32768us; 24us; 109us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 0us; 16446us; 1us; 32768us; 24us; 112us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 0us; 16447us; 1us; 32768us; 24us; 115us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 0us; 16448us; 1us; 32768us; 24us; 118us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 0us; 16449us; 13us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 36us; 124us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 1us; 32768us; 28us; 122us; 0us; 16450us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 0us; 16453us; 0us; 16455us; 13us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 28us; 127us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; 0us; 16454us; 0us; 16458us; 2us; 32768us; 30us; 130us; 32us; 131us; 0us; 16457us; 12us; 32768us; 15us; 108us; 16us; 111us; 17us; 114us; 18us; 117us; 27us; 125us; 29us; 128us; 31us; 92us; 33us; 93us; 37us; 91us; 38us; 88us; 39us; 89us; 40us; 90us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 1us; 2us; 7us; 8us; 9us; 10us; 11us; 14us; 16us; 17us; 23us; 24us; 25us; 26us; 27us; 28us; 30us; 32us; 33us; 35us; 37us; 38us; 40us; 42us; 43us; 45us; 47us; 48us; 52us; 53us; 59us; 60us; 62us; 63us; 69us; 70us; 71us; 72us; 73us; 74us; 76us; 78us; 79us; 81us; 83us; 84us; 86us; 88us; 89us; 91us; 93us; 94us; 96us; 98us; 99us; 106us; 107us; 108us; 109us; 110us; 111us; 113us; 115us; 116us; 118us; 121us; 122us; 124us; 126us; 127us; 129us; 131us; 132us; 133us; 134us; 135us; 136us; 139us; 140us; 141us; 142us; 146us; 147us; 148us; 149us; 150us; 151us; 152us; 153us; 154us; 155us; 156us; 157us; 158us; 159us; 160us; 164us; 169us; 175us; 181us; 187us; 193us; 198us; 203us; 208us; 213us; 226us; 239us; 241us; 254us; 255us; 257us; 270us; 271us; 273us; 286us; 287us; 289us; 302us; 303us; 317us; 319us; 320us; 333us; 334us; 335us; 349us; 350us; 351us; 354us; 355us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 5us; 0us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 4us; 5us; 2us; 0us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 5us; 0us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 2us; 3us; 1us; 1us; 1us; 3us; 0us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 4us; 4us; 4us; 4us; 4us; 3us; 1us; 1us; 3us; 0us; 2us; 3us; 0us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 4us; 4us; 4us; 4us; 5us; 6us; 7us; 8us; 9us; 9us; 9us; 10us; 10us; 10us; 10us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 16us; 16us; 16us; 16us; 17us; 18us; 19us; 20us; 20us; 21us; 21us; 22us; 23us; 24us; 24us; 25us; 26us; 26us; 27us; 27us; 28us; 28us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 30us; 30us; 31us; 32us; 32us; 33us; 34us; 34us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 16390us; 16392us; 16393us; 16394us; 16395us; 65535us; 65535us; 16396us; 65535us; 65535us; 16397us; 65535us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 65535us; 65535us; 16400us; 65535us; 65535us; 65535us; 16401us; 16404us; 16405us; 16406us; 16407us; 65535us; 65535us; 16408us; 65535us; 65535us; 16409us; 65535us; 65535us; 16410us; 65535us; 65535us; 16411us; 65535us; 65535us; 65535us; 65535us; 16412us; 16414us; 16415us; 16416us; 16417us; 65535us; 65535us; 16418us; 65535us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 16422us; 16423us; 16424us; 16425us; 65535us; 65535us; 16426us; 16428us; 65535us; 65535us; 16429us; 16431us; 16432us; 16433us; 16434us; 16435us; 16436us; 16437us; 16438us; 16439us; 16440us; 16441us; 16442us; 16443us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16446us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 65535us; 16449us; 65535us; 65535us; 16450us; 65535us; 16453us; 65535us; 65535us; 16454us; 65535us; 65535us; 16457us; 65535us; |]
let _fsyacc_reductions ()  =    [| 
# 424 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Terrabuild.Configuration.Project.AST.ProjectFile in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startProjectFile));
# 433 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "ProjectParser/Parser.fsy"
                                                       _1 
                   )
# 45 "ProjectParser/Parser.fsy"
                 : Terrabuild.Configuration.Project.AST.ProjectFile));
# 444 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "ProjectParser/Parser.fsy"
                                         ProjectFile.Empty 
                   )
# 48 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 454 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Project in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "ProjectParser/Parser.fsy"
                                                           _1.Patch _2 
                   )
# 49 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 466 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Extension in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "ProjectParser/Parser.fsy"
                                                             _1.Patch _2 
                   )
# 50 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 478 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Target in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "ProjectParser/Parser.fsy"
                                                          _1.Patch _2 
                   )
# 51 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 490 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            let _4 = parseState.GetInput(4) :?> 'gentype_ExtensionComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "ProjectParser/Parser.fsy"
                                                                                             ProjectFileComponents.Extension (_2, _4) 
                   )
# 55 "ProjectParser/Parser.fsy"
                 : 'gentype_Extension));
# 502 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "ProjectParser/Parser.fsy"
                                         Extension.Empty 
                   )
# 57 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 512 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionContainer in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "ProjectParser/Parser.fsy"
                                                                    _1.Patch _2 
                   )
# 58 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 524 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionVariables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "ProjectParser/Parser.fsy"
                                                                    _1.Patch _2 
                   )
# 59 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 536 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionScript in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "ProjectParser/Parser.fsy"
                                                                 _1.Patch _2 
                   )
# 60 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 548 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionDefaults in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "ProjectParser/Parser.fsy"
                                                                   _1.Patch _2 
                   )
# 61 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 560 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "ProjectParser/Parser.fsy"
                                                    ExtensionComponents.Container _3 
                   )
# 63 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionContainer));
# 571 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "ProjectParser/Parser.fsy"
                                                          ExtensionComponents.Variables _3 
                   )
# 65 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionVariables));
# 582 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "ProjectParser/Parser.fsy"
                                                 ExtensionComponents.Script _3 
                   )
# 67 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionScript));
# 593 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "ProjectParser/Parser.fsy"
                                                    ExtensionComponents.Defaults _3 
                   )
# 69 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionDefaults));
# 604 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ProjectComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "ProjectParser/Parser.fsy"
                                                                     ProjectFileComponents.Project _3 
                   )
# 73 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 615 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            let _4 = parseState.GetInput(4) :?> 'gentype_ProjectComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "ProjectParser/Parser.fsy"
                                                                                         ProjectComponents.Init _2 |> _4.Patch |> ProjectFileComponents.Project 
                   )
# 74 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 627 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "ProjectParser/Parser.fsy"
                                                         ProjectComponents.Init _2 |> Project.Empty.Patch |> ProjectFileComponents.Project 
                   )
# 75 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 638 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "ProjectParser/Parser.fsy"
                                         Project.Empty 
                   )
# 77 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 648 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectDependencies in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "ProjectParser/Parser.fsy"
                                                                   _1.Patch _2 
                   )
# 78 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 660 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectOutputs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "ProjectParser/Parser.fsy"
                                                              _1.Patch _2 
                   )
# 79 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 672 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectIgnores in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "ProjectParser/Parser.fsy"
                                                              _1.Patch _2 
                   )
# 80 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 684 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectLabels in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "ProjectParser/Parser.fsy"
                                                             _1.Patch _2 
                   )
# 81 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 696 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "ProjectParser/Parser.fsy"
                                                             ProjectComponents.Dependencies _3 
                   )
# 83 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectDependencies));
# 707 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "ProjectParser/Parser.fsy"
                                                        ProjectComponents.Outputs _3 
                   )
# 85 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectOutputs));
# 718 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "ProjectParser/Parser.fsy"
                                                        ProjectComponents.Ignores _3 
                   )
# 87 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectIgnores));
# 729 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "ProjectParser/Parser.fsy"
                                                       ProjectComponents.Labels _3 
                   )
# 89 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectLabels));
# 740 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_TargetComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "ProjectParser/Parser.fsy"
                                                                              ProjectFileComponents.Target (_2, _4) 
                   )
# 93 "ProjectParser/Parser.fsy"
                 : 'gentype_Target));
# 752 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "ProjectParser/Parser.fsy"
                                         Target.Empty 
                   )
# 95 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 762 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetDependsOn in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "ProjectParser/Parser.fsy"
                                                              _1.Patch _2 
                   )
# 96 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 774 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetRebuild in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "ProjectParser/Parser.fsy"
                                                            _1.Patch _2 
                   )
# 97 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 786 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetOutputs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "ProjectParser/Parser.fsy"
                                                            _1.Patch _2 
                   )
# 98 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 798 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetStep in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "ProjectParser/Parser.fsy"
                                                         _1.Patch _2 
                   )
# 99 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 810 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfTargetIdentifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "ProjectParser/Parser.fsy"
                                                                      TargetComponents.DependsOn _3 
                   )
# 101 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetDependsOn));
# 821 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "ProjectParser/Parser.fsy"
                                                TargetComponents.Rebuild _3 
                   )
# 103 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetRebuild));
# 832 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "ProjectParser/Parser.fsy"
                                                        TargetComponents.Outputs _3 
                   )
# 105 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetOutputs));
# 843 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionIdentifier in
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "ProjectParser/Parser.fsy"
                                                            TargetComponents.Step { Extension = _1; Command = _2; Parameters = Map.empty } 
                   )
# 107 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetStep));
# 855 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionIdentifier in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "ProjectParser/Parser.fsy"
                                                                    TargetComponents.Step { Extension = _1; Command = _2; Parameters = _3 } 
                   )
# 108 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetStep));
# 868 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "ProjectParser/Parser.fsy"
                                  true 
                   )
# 111 "ProjectParser/Parser.fsy"
                 : 'gentype_Bool));
# 878 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "ProjectParser/Parser.fsy"
                                   false 
                   )
# 112 "ProjectParser/Parser.fsy"
                 : 'gentype_Bool));
# 888 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "ProjectParser/Parser.fsy"
                                    _1 
                   )
# 115 "ProjectParser/Parser.fsy"
                 : 'gentype_String));
# 899 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Strings in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "ProjectParser/Parser.fsy"
                                                           _2 
                   )
# 117 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfString));
# 910 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 119 "ProjectParser/Parser.fsy"
                 : 'gentype_Strings));
# 920 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Strings in
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "ProjectParser/Parser.fsy"
                                            _1 @ [_2] 
                   )
# 120 "ProjectParser/Parser.fsy"
                 : 'gentype_Strings));
# 932 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetIdentifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "ProjectParser/Parser.fsy"
                                                                     _2 
                   )
# 123 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfTargetIdentifiers));
# 943 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 125 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifiers));
# 953 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetIdentifiers in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetIdentifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "ProjectParser/Parser.fsy"
                                                                _1 @ [_2] 
                   )
# 126 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifiers));
# 965 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "ProjectParser/Parser.fsy"
                                               _1 
                   )
# 129 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifier));
# 976 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "ProjectParser/Parser.fsy"
                                        _1 
                   )
# 130 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifier));
# 987 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "ProjectParser/Parser.fsy"
                                                  _1 
                   )
# 133 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionIdentifier));
# 998 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "ProjectParser/Parser.fsy"
                                        _1 
                   )
# 134 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionIdentifier));
# 1009 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "ProjectParser/Parser.fsy"
                                     Expr.Nothing 
                   )
# 138 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1019 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "ProjectParser/Parser.fsy"
                                  Expr.Boolean true 
                   )
# 139 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1029 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "ProjectParser/Parser.fsy"
                                   Expr.Boolean false 
                   )
# 140 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1039 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "ProjectParser/Parser.fsy"
                                    Expr.String _1 
                   )
# 141 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1050 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "ProjectParser/Parser.fsy"
                                    Expr.Number _1 
                   )
# 142 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1061 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "ProjectParser/Parser.fsy"
                                      Expr.Variable _1 
                   )
# 143 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1072 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "ProjectParser/Parser.fsy"
                                      Expr.List _1 
                   )
# 145 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1083 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "ProjectParser/Parser.fsy"
                                     Expr.Map _1 
                   )
# 146 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1094 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "ProjectParser/Parser.fsy"
                                            Expr.Function (Function.Plus, [_1; _3]) 
                   )
# 148 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1106 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "ProjectParser/Parser.fsy"
                                             Expr.Function (Function.Minus, [_1; _3]) 
                   )
# 149 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1118 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "ProjectParser/Parser.fsy"
                                                     Expr.Function (Function.Trim, [_3]) 
                   )
# 150 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1129 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "ProjectParser/Parser.fsy"
                                                      Expr.Function (Function.Upper, [_3]) 
                   )
# 151 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1140 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "ProjectParser/Parser.fsy"
                                                      Expr.Function (Function.Lower, [_3]) 
                   )
# 152 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1151 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "ProjectParser/Parser.fsy"
                                                        Expr.Function (Function.Version, [_3]) 
                   )
# 153 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1162 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprIndex in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "ProjectParser/Parser.fsy"
                                                                      Expr.Function (Function.Item, [_1; _3]) 
                   )
# 154 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1174 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "ProjectParser/Parser.fsy"
                                                Expr.Function (Function.Coalesce, [_1; _3]) 
                   )
# 155 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1186 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "ProjectParser/Parser.fsy"
                                  _1 
                   )
# 158 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprIndex));
# 1197 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "ProjectParser/Parser.fsy"
                                        Expr.String _1 
                   )
# 159 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprIndex));
# 1208 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprListContent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "ProjectParser/Parser.fsy"
                                                                   _2 
                   )
# 162 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprList));
# 1219 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 164 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprListContent));
# 1229 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprListContent in
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "ProjectParser/Parser.fsy"
                                                  _1 @ [_2] 
                   )
# 165 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprListContent));
# 1241 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprMapContent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "ProjectParser/Parser.fsy"
                                                          _2 
                   )
# 168 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMap));
# 1252 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "ProjectParser/Parser.fsy"
                                         Map.empty 
                   )
# 170 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMapContent));
# 1262 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprMapContent in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "ProjectParser/Parser.fsy"
                                                     _1.Add (_2, _3) 
                   )
# 171 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMapContent));
|]
# 1276 "Gen/ProjectParser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 44;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let ProjectFile lexer lexbuf : Terrabuild.Configuration.Project.AST.ProjectFile =
    engine lexer lexbuf 0 :?> _
