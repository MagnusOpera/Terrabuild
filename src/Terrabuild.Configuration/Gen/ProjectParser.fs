// Implementation file for parser generated by fsyacc
module internal Terrabuild.Configuration.Project.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "ProjectParser/Parser.fsy"
 
open Terrabuild.Configuration.AST
open Terrabuild.Configuration.Project.AST
open Terrabuild.Expressions


#if DEBUG
let debugPrint s = printfn "### %s" s
#else
let debugPrint s = ignore s
#endif


# 20 "Gen/ProjectParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | DEPENDENCIES
  | OUTPUTS
  | IGNORES
  | INCLUDES
  | LABELS
  | VARIABLES
  | CONTAINER
  | INIT
  | SCRIPT
  | DEPENDS_ON
  | REBUILD
  | DEFAULTS
  | NAME
  | PROJECT
  | EXTENSION
  | TARGET
  | EOF
  | TRIM
  | UPPER
  | LOWER
  | VERSION
  | DOUBLE_QUESTION
  | QUESTION
  | COLON
  | MINUS
  | PLUS
  | COMMA
  | EQUAL
  | NOT_EQUAL
  | LPAREN
  | RPAREN
  | DOT_LSQBRACKET
  | DOT_QUESTION_LSQBRACKET
  | LSQBRACKET
  | RSQBRACKET
  | LBRACE
  | RBRACE
  | NUMBER of (int)
  | KEY of (string)
  | VARIABLE of (string)
  | TARGET_IDENTIFIER of (string)
  | EXTENSION_IDENTIFIER of (string)
  | IDENTIFIER of (string)
  | STRING of (string)
  | NOTHING
  | TRUE
  | FALSE
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_DEPENDENCIES
    | TOKEN_OUTPUTS
    | TOKEN_IGNORES
    | TOKEN_INCLUDES
    | TOKEN_LABELS
    | TOKEN_VARIABLES
    | TOKEN_CONTAINER
    | TOKEN_INIT
    | TOKEN_SCRIPT
    | TOKEN_DEPENDS_ON
    | TOKEN_REBUILD
    | TOKEN_DEFAULTS
    | TOKEN_NAME
    | TOKEN_PROJECT
    | TOKEN_EXTENSION
    | TOKEN_TARGET
    | TOKEN_EOF
    | TOKEN_TRIM
    | TOKEN_UPPER
    | TOKEN_LOWER
    | TOKEN_VERSION
    | TOKEN_DOUBLE_QUESTION
    | TOKEN_QUESTION
    | TOKEN_COLON
    | TOKEN_MINUS
    | TOKEN_PLUS
    | TOKEN_COMMA
    | TOKEN_EQUAL
    | TOKEN_NOT_EQUAL
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_DOT_LSQBRACKET
    | TOKEN_DOT_QUESTION_LSQBRACKET
    | TOKEN_LSQBRACKET
    | TOKEN_RSQBRACKET
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_NUMBER
    | TOKEN_KEY
    | TOKEN_VARIABLE
    | TOKEN_TARGET_IDENTIFIER
    | TOKEN_EXTENSION_IDENTIFIER
    | TOKEN_IDENTIFIER
    | TOKEN_STRING
    | TOKEN_NOTHING
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startProjectFile
    | NONTERM_ProjectFile
    | NONTERM_ProjectFileComponents
    | NONTERM_Extension
    | NONTERM_ExtensionComponents
    | NONTERM_ExtensionContainer
    | NONTERM_ExtensionVariables
    | NONTERM_ExtensionScript
    | NONTERM_ExtensionDefaults
    | NONTERM_Project
    | NONTERM_ProjectComponents
    | NONTERM_ProjectDependencies
    | NONTERM_ProjectOutputs
    | NONTERM_ProjectIgnores
    | NONTERM_ProjectIncludes
    | NONTERM_ProjectLabels
    | NONTERM_Target
    | NONTERM_TargetComponents
    | NONTERM_TargetDependsOn
    | NONTERM_TargetRebuild
    | NONTERM_TargetOutputs
    | NONTERM_TargetStep
    | NONTERM_Bool
    | NONTERM_String
    | NONTERM_ListOfString
    | NONTERM_Strings
    | NONTERM_ListOfIdentifiers
    | NONTERM_Identifiers
    | NONTERM_ListOfTargetIdentifiers
    | NONTERM_TargetIdentifiers
    | NONTERM_TargetIdentifier
    | NONTERM_ExtensionIdentifier
    | NONTERM_Expr
    | NONTERM_ExprIndex
    | NONTERM_ExprList
    | NONTERM_ExprListContent
    | NONTERM_ExprMap
    | NONTERM_ExprMapContent

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | DEPENDENCIES  -> 0 
  | OUTPUTS  -> 1 
  | IGNORES  -> 2 
  | INCLUDES  -> 3 
  | LABELS  -> 4 
  | VARIABLES  -> 5 
  | CONTAINER  -> 6 
  | INIT  -> 7 
  | SCRIPT  -> 8 
  | DEPENDS_ON  -> 9 
  | REBUILD  -> 10 
  | DEFAULTS  -> 11 
  | NAME  -> 12 
  | PROJECT  -> 13 
  | EXTENSION  -> 14 
  | TARGET  -> 15 
  | EOF  -> 16 
  | TRIM  -> 17 
  | UPPER  -> 18 
  | LOWER  -> 19 
  | VERSION  -> 20 
  | DOUBLE_QUESTION  -> 21 
  | QUESTION  -> 22 
  | COLON  -> 23 
  | MINUS  -> 24 
  | PLUS  -> 25 
  | COMMA  -> 26 
  | EQUAL  -> 27 
  | NOT_EQUAL  -> 28 
  | LPAREN  -> 29 
  | RPAREN  -> 30 
  | DOT_LSQBRACKET  -> 31 
  | DOT_QUESTION_LSQBRACKET  -> 32 
  | LSQBRACKET  -> 33 
  | RSQBRACKET  -> 34 
  | LBRACE  -> 35 
  | RBRACE  -> 36 
  | NUMBER _ -> 37 
  | KEY _ -> 38 
  | VARIABLE _ -> 39 
  | TARGET_IDENTIFIER _ -> 40 
  | EXTENSION_IDENTIFIER _ -> 41 
  | IDENTIFIER _ -> 42 
  | STRING _ -> 43 
  | NOTHING  -> 44 
  | TRUE  -> 45 
  | FALSE  -> 46 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_DEPENDENCIES 
  | 1 -> TOKEN_OUTPUTS 
  | 2 -> TOKEN_IGNORES 
  | 3 -> TOKEN_INCLUDES 
  | 4 -> TOKEN_LABELS 
  | 5 -> TOKEN_VARIABLES 
  | 6 -> TOKEN_CONTAINER 
  | 7 -> TOKEN_INIT 
  | 8 -> TOKEN_SCRIPT 
  | 9 -> TOKEN_DEPENDS_ON 
  | 10 -> TOKEN_REBUILD 
  | 11 -> TOKEN_DEFAULTS 
  | 12 -> TOKEN_NAME 
  | 13 -> TOKEN_PROJECT 
  | 14 -> TOKEN_EXTENSION 
  | 15 -> TOKEN_TARGET 
  | 16 -> TOKEN_EOF 
  | 17 -> TOKEN_TRIM 
  | 18 -> TOKEN_UPPER 
  | 19 -> TOKEN_LOWER 
  | 20 -> TOKEN_VERSION 
  | 21 -> TOKEN_DOUBLE_QUESTION 
  | 22 -> TOKEN_QUESTION 
  | 23 -> TOKEN_COLON 
  | 24 -> TOKEN_MINUS 
  | 25 -> TOKEN_PLUS 
  | 26 -> TOKEN_COMMA 
  | 27 -> TOKEN_EQUAL 
  | 28 -> TOKEN_NOT_EQUAL 
  | 29 -> TOKEN_LPAREN 
  | 30 -> TOKEN_RPAREN 
  | 31 -> TOKEN_DOT_LSQBRACKET 
  | 32 -> TOKEN_DOT_QUESTION_LSQBRACKET 
  | 33 -> TOKEN_LSQBRACKET 
  | 34 -> TOKEN_RSQBRACKET 
  | 35 -> TOKEN_LBRACE 
  | 36 -> TOKEN_RBRACE 
  | 37 -> TOKEN_NUMBER 
  | 38 -> TOKEN_KEY 
  | 39 -> TOKEN_VARIABLE 
  | 40 -> TOKEN_TARGET_IDENTIFIER 
  | 41 -> TOKEN_EXTENSION_IDENTIFIER 
  | 42 -> TOKEN_IDENTIFIER 
  | 43 -> TOKEN_STRING 
  | 44 -> TOKEN_NOTHING 
  | 45 -> TOKEN_TRUE 
  | 46 -> TOKEN_FALSE 
  | 49 -> TOKEN_end_of_input
  | 47 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startProjectFile 
    | 1 -> NONTERM_ProjectFile 
    | 2 -> NONTERM_ProjectFileComponents 
    | 3 -> NONTERM_ProjectFileComponents 
    | 4 -> NONTERM_ProjectFileComponents 
    | 5 -> NONTERM_ProjectFileComponents 
    | 6 -> NONTERM_Extension 
    | 7 -> NONTERM_ExtensionComponents 
    | 8 -> NONTERM_ExtensionComponents 
    | 9 -> NONTERM_ExtensionComponents 
    | 10 -> NONTERM_ExtensionComponents 
    | 11 -> NONTERM_ExtensionComponents 
    | 12 -> NONTERM_ExtensionContainer 
    | 13 -> NONTERM_ExtensionVariables 
    | 14 -> NONTERM_ExtensionScript 
    | 15 -> NONTERM_ExtensionDefaults 
    | 16 -> NONTERM_Project 
    | 17 -> NONTERM_Project 
    | 18 -> NONTERM_Project 
    | 19 -> NONTERM_Project 
    | 20 -> NONTERM_ProjectComponents 
    | 21 -> NONTERM_ProjectComponents 
    | 22 -> NONTERM_ProjectComponents 
    | 23 -> NONTERM_ProjectComponents 
    | 24 -> NONTERM_ProjectComponents 
    | 25 -> NONTERM_ProjectComponents 
    | 26 -> NONTERM_ProjectDependencies 
    | 27 -> NONTERM_ProjectOutputs 
    | 28 -> NONTERM_ProjectIgnores 
    | 29 -> NONTERM_ProjectIncludes 
    | 30 -> NONTERM_ProjectLabels 
    | 31 -> NONTERM_Target 
    | 32 -> NONTERM_TargetComponents 
    | 33 -> NONTERM_TargetComponents 
    | 34 -> NONTERM_TargetComponents 
    | 35 -> NONTERM_TargetComponents 
    | 36 -> NONTERM_TargetComponents 
    | 37 -> NONTERM_TargetDependsOn 
    | 38 -> NONTERM_TargetRebuild 
    | 39 -> NONTERM_TargetOutputs 
    | 40 -> NONTERM_TargetStep 
    | 41 -> NONTERM_TargetStep 
    | 42 -> NONTERM_Bool 
    | 43 -> NONTERM_Bool 
    | 44 -> NONTERM_String 
    | 45 -> NONTERM_ListOfString 
    | 46 -> NONTERM_Strings 
    | 47 -> NONTERM_Strings 
    | 48 -> NONTERM_ListOfIdentifiers 
    | 49 -> NONTERM_Identifiers 
    | 50 -> NONTERM_Identifiers 
    | 51 -> NONTERM_ListOfTargetIdentifiers 
    | 52 -> NONTERM_TargetIdentifiers 
    | 53 -> NONTERM_TargetIdentifiers 
    | 54 -> NONTERM_TargetIdentifier 
    | 55 -> NONTERM_TargetIdentifier 
    | 56 -> NONTERM_ExtensionIdentifier 
    | 57 -> NONTERM_ExtensionIdentifier 
    | 58 -> NONTERM_Expr 
    | 59 -> NONTERM_Expr 
    | 60 -> NONTERM_Expr 
    | 61 -> NONTERM_Expr 
    | 62 -> NONTERM_Expr 
    | 63 -> NONTERM_Expr 
    | 64 -> NONTERM_Expr 
    | 65 -> NONTERM_Expr 
    | 66 -> NONTERM_Expr 
    | 67 -> NONTERM_Expr 
    | 68 -> NONTERM_Expr 
    | 69 -> NONTERM_Expr 
    | 70 -> NONTERM_Expr 
    | 71 -> NONTERM_Expr 
    | 72 -> NONTERM_Expr 
    | 73 -> NONTERM_Expr 
    | 74 -> NONTERM_Expr 
    | 75 -> NONTERM_Expr 
    | 76 -> NONTERM_Expr 
    | 77 -> NONTERM_Expr 
    | 78 -> NONTERM_ExprIndex 
    | 79 -> NONTERM_ExprList 
    | 80 -> NONTERM_ExprListContent 
    | 81 -> NONTERM_ExprListContent 
    | 82 -> NONTERM_ExprMap 
    | 83 -> NONTERM_ExprMapContent 
    | 84 -> NONTERM_ExprMapContent 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 49 
let _fsyacc_tagOfErrorTerminal = 47

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | DEPENDENCIES  -> "DEPENDENCIES" 
  | OUTPUTS  -> "OUTPUTS" 
  | IGNORES  -> "IGNORES" 
  | INCLUDES  -> "INCLUDES" 
  | LABELS  -> "LABELS" 
  | VARIABLES  -> "VARIABLES" 
  | CONTAINER  -> "CONTAINER" 
  | INIT  -> "INIT" 
  | SCRIPT  -> "SCRIPT" 
  | DEPENDS_ON  -> "DEPENDS_ON" 
  | REBUILD  -> "REBUILD" 
  | DEFAULTS  -> "DEFAULTS" 
  | NAME  -> "NAME" 
  | PROJECT  -> "PROJECT" 
  | EXTENSION  -> "EXTENSION" 
  | TARGET  -> "TARGET" 
  | EOF  -> "EOF" 
  | TRIM  -> "TRIM" 
  | UPPER  -> "UPPER" 
  | LOWER  -> "LOWER" 
  | VERSION  -> "VERSION" 
  | DOUBLE_QUESTION  -> "DOUBLE_QUESTION" 
  | QUESTION  -> "QUESTION" 
  | COLON  -> "COLON" 
  | MINUS  -> "MINUS" 
  | PLUS  -> "PLUS" 
  | COMMA  -> "COMMA" 
  | EQUAL  -> "EQUAL" 
  | NOT_EQUAL  -> "NOT_EQUAL" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | DOT_LSQBRACKET  -> "DOT_LSQBRACKET" 
  | DOT_QUESTION_LSQBRACKET  -> "DOT_QUESTION_LSQBRACKET" 
  | LSQBRACKET  -> "LSQBRACKET" 
  | RSQBRACKET  -> "RSQBRACKET" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | NUMBER _ -> "NUMBER" 
  | KEY _ -> "KEY" 
  | VARIABLE _ -> "VARIABLE" 
  | TARGET_IDENTIFIER _ -> "TARGET_IDENTIFIER" 
  | EXTENSION_IDENTIFIER _ -> "EXTENSION_IDENTIFIER" 
  | IDENTIFIER _ -> "IDENTIFIER" 
  | STRING _ -> "STRING" 
  | NOTHING  -> "NOTHING" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | DEPENDENCIES  -> (null : System.Object) 
  | OUTPUTS  -> (null : System.Object) 
  | IGNORES  -> (null : System.Object) 
  | INCLUDES  -> (null : System.Object) 
  | LABELS  -> (null : System.Object) 
  | VARIABLES  -> (null : System.Object) 
  | CONTAINER  -> (null : System.Object) 
  | INIT  -> (null : System.Object) 
  | SCRIPT  -> (null : System.Object) 
  | DEPENDS_ON  -> (null : System.Object) 
  | REBUILD  -> (null : System.Object) 
  | DEFAULTS  -> (null : System.Object) 
  | NAME  -> (null : System.Object) 
  | PROJECT  -> (null : System.Object) 
  | EXTENSION  -> (null : System.Object) 
  | TARGET  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | TRIM  -> (null : System.Object) 
  | UPPER  -> (null : System.Object) 
  | LOWER  -> (null : System.Object) 
  | VERSION  -> (null : System.Object) 
  | DOUBLE_QUESTION  -> (null : System.Object) 
  | QUESTION  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | NOT_EQUAL  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | DOT_LSQBRACKET  -> (null : System.Object) 
  | DOT_QUESTION_LSQBRACKET  -> (null : System.Object) 
  | LSQBRACKET  -> (null : System.Object) 
  | RSQBRACKET  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | NUMBER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VARIABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TARGET_IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EXTENSION_IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NOTHING  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 1us; 65535us; 2us; 5us; 1us; 65535us; 9us; 10us; 1us; 65535us; 10us; 12us; 1us; 65535us; 10us; 13us; 1us; 65535us; 10us; 14us; 1us; 65535us; 10us; 15us; 1us; 65535us; 2us; 4us; 2us; 65535us; 29us; 30us; 33us; 34us; 2us; 65535us; 30us; 36us; 34us; 36us; 2us; 65535us; 30us; 37us; 34us; 37us; 2us; 65535us; 30us; 38us; 34us; 38us; 2us; 65535us; 30us; 39us; 34us; 39us; 2us; 65535us; 30us; 40us; 34us; 40us; 1us; 65535us; 2us; 6us; 1us; 65535us; 58us; 59us; 1us; 65535us; 59us; 61us; 1us; 65535us; 59us; 62us; 1us; 65535us; 59us; 63us; 1us; 65535us; 59us; 64us; 1us; 65535us; 69us; 70us; 3us; 65535us; 17us; 18us; 23us; 24us; 81us; 83us; 7us; 65535us; 20us; 21us; 42us; 43us; 45us; 46us; 48us; 49us; 51us; 52us; 54us; 55us; 72us; 73us; 1us; 65535us; 80us; 81us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 66us; 67us; 1us; 65535us; 84us; 85us; 1us; 65535us; 85us; 87us; 3us; 65535us; 7us; 8us; 28us; 32us; 59us; 74us; 15us; 65535us; 114us; 111us; 117us; 111us; 120us; 100us; 121us; 101us; 122us; 102us; 123us; 103us; 125us; 104us; 128us; 105us; 131us; 106us; 134us; 107us; 136us; 108us; 137us; 109us; 138us; 110us; 140us; 112us; 145us; 113us; 2us; 65535us; 114us; 115us; 117us; 118us; 15us; 65535us; 114us; 98us; 117us; 98us; 120us; 98us; 121us; 98us; 122us; 98us; 123us; 98us; 125us; 98us; 128us; 98us; 131us; 98us; 134us; 98us; 136us; 98us; 137us; 98us; 138us; 98us; 140us; 98us; 145us; 98us; 1us; 65535us; 139us; 140us; 17us; 65535us; 26us; 27us; 75us; 76us; 114us; 99us; 117us; 99us; 120us; 99us; 121us; 99us; 122us; 99us; 123us; 99us; 125us; 99us; 128us; 99us; 131us; 99us; 134us; 99us; 136us; 99us; 137us; 99us; 138us; 99us; 140us; 99us; 145us; 99us; 1us; 65535us; 142us; 143us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 7us; 9us; 11us; 13us; 15us; 17us; 19us; 22us; 25us; 28us; 31us; 34us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 55us; 63us; 65us; 66us; 67us; 69us; 71us; 73us; 77us; 93us; 96us; 112us; 114us; 132us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 4us; 1us; 3us; 4us; 5us; 1us; 1us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 6us; 5us; 6us; 8us; 9us; 10us; 11us; 1us; 6us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 4us; 16us; 17us; 18us; 19us; 1us; 17us; 6us; 17us; 21us; 22us; 23us; 24us; 25us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 6us; 19us; 21us; 22us; 23us; 24us; 25us; 1us; 19us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 5us; 31us; 33us; 34us; 35us; 36us; 1us; 31us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 39us; 2us; 40us; 41us; 2us; 40us; 41us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 45us; 2us; 45us; 47us; 1us; 45us; 1us; 47us; 1us; 51us; 2us; 51us; 53us; 1us; 51us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 9us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 73us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 74us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 75us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 76us; 76us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 76us; 77us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 76us; 77us; 77us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 76us; 77us; 78us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 76us; 77us; 81us; 9us; 66us; 67us; 68us; 69us; 70us; 71us; 76us; 77us; 84us; 1us; 66us; 1us; 66us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 79us; 2us; 79us; 81us; 1us; 79us; 1us; 82us; 2us; 82us; 84us; 1us; 82us; 1us; 84us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 9us; 11us; 13us; 15us; 17us; 19us; 21us; 23us; 29us; 31us; 33us; 35us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 68us; 70us; 77us; 79us; 82us; 84us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 145us; 147us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; 165us; 167us; 169us; 171us; 173us; 176us; 179us; 181us; 183us; 185us; 187us; 189us; 192us; 194us; 196us; 198us; 201us; 203us; 205us; 207us; 209us; 211us; 213us; 215us; 217us; 219us; 221us; 223us; 225us; 227us; 229us; 239us; 249us; 259us; 269us; 279us; 289us; 299us; 309us; 319us; 329us; 339us; 349us; 359us; 369us; 371us; 373us; 375us; 377us; 379us; 381us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 399us; 401us; 403us; 405us; 407us; 409us; 411us; 413us; 415us; 417us; 419us; 421us; 424us; 426us; 428us; 431us; 433us; |]
let _fsyacc_action_rows = 146
let _fsyacc_actionTableElements = [|0us; 16386us; 0us; 49152us; 4us; 32768us; 13us; 28us; 14us; 7us; 15us; 56us; 16us; 3us; 0us; 16385us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 2us; 32768us; 41us; 90us; 42us; 91us; 1us; 32768us; 35us; 9us; 0us; 16391us; 5us; 32768us; 5us; 19us; 6us; 16us; 8us; 22us; 11us; 25us; 36us; 11us; 0us; 16390us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 1us; 32768us; 27us; 17us; 1us; 32768us; 43us; 79us; 0us; 16396us; 1us; 32768us; 27us; 20us; 1us; 32768us; 33us; 80us; 0us; 16397us; 1us; 32768us; 27us; 23us; 1us; 32768us; 43us; 79us; 0us; 16398us; 1us; 32768us; 27us; 26us; 1us; 32768us; 35us; 142us; 0us; 16399us; 3us; 16400us; 35us; 29us; 41us; 90us; 42us; 91us; 0us; 16404us; 6us; 32768us; 0us; 41us; 1us; 44us; 2us; 47us; 3us; 50us; 4us; 53us; 36us; 31us; 0us; 16401us; 1us; 16402us; 35us; 33us; 0us; 16404us; 6us; 32768us; 0us; 41us; 1us; 44us; 2us; 47us; 3us; 50us; 4us; 53us; 36us; 35us; 0us; 16403us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 1us; 32768us; 27us; 42us; 1us; 32768us; 33us; 80us; 0us; 16410us; 1us; 32768us; 27us; 45us; 1us; 32768us; 33us; 80us; 0us; 16411us; 1us; 32768us; 27us; 48us; 1us; 32768us; 33us; 80us; 0us; 16412us; 1us; 32768us; 27us; 51us; 1us; 32768us; 33us; 80us; 0us; 16413us; 1us; 32768us; 27us; 54us; 1us; 32768us; 33us; 80us; 0us; 16414us; 1us; 32768us; 42us; 57us; 1us; 32768us; 35us; 58us; 0us; 16416us; 6us; 32768us; 1us; 71us; 9us; 65us; 10us; 68us; 36us; 60us; 41us; 90us; 42us; 91us; 0us; 16415us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 1us; 32768us; 27us; 66us; 1us; 32768us; 33us; 84us; 0us; 16421us; 1us; 32768us; 27us; 69us; 2us; 32768us; 45us; 77us; 46us; 78us; 0us; 16422us; 1us; 32768us; 27us; 72us; 1us; 32768us; 33us; 80us; 0us; 16423us; 1us; 32768us; 42us; 75us; 1us; 16424us; 35us; 142us; 0us; 16425us; 0us; 16426us; 0us; 16427us; 0us; 16428us; 0us; 16430us; 2us; 32768us; 34us; 82us; 43us; 79us; 0us; 16429us; 0us; 16431us; 0us; 16436us; 3us; 32768us; 34us; 86us; 40us; 88us; 42us; 89us; 0us; 16435us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 0us; 16448us; 0us; 16449us; 4us; 16452us; 24us; 123us; 25us; 122us; 31us; 114us; 32us; 117us; 4us; 16453us; 24us; 123us; 25us; 122us; 31us; 114us; 32us; 117us; 2us; 16454us; 31us; 114us; 32us; 117us; 3us; 16455us; 25us; 122us; 31us; 114us; 32us; 117us; 9us; 32768us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 30us; 126us; 31us; 114us; 32us; 117us; 9us; 32768us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 30us; 129us; 31us; 114us; 32us; 117us; 9us; 32768us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 30us; 132us; 31us; 114us; 32us; 117us; 9us; 32768us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 30us; 135us; 31us; 114us; 32us; 117us; 6us; 16460us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 31us; 114us; 32us; 117us; 9us; 32768us; 21us; 136us; 22us; 137us; 23us; 138us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 31us; 114us; 32us; 117us; 8us; 16461us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 31us; 114us; 32us; 117us; 8us; 16462us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 31us; 114us; 32us; 117us; 8us; 16465us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 31us; 114us; 32us; 117us; 8us; 16468us; 21us; 136us; 22us; 137us; 24us; 123us; 25us; 122us; 27us; 120us; 28us; 121us; 31us; 114us; 32us; 117us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 1us; 32768us; 34us; 116us; 0us; 16450us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 1us; 32768us; 34us; 119us; 0us; 16451us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 1us; 32768us; 29us; 125us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 0us; 16456us; 1us; 32768us; 29us; 128us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 0us; 16457us; 1us; 32768us; 29us; 131us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 0us; 16458us; 1us; 32768us; 29us; 134us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 0us; 16459us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 0us; 16464us; 13us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 34us; 141us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; 0us; 16463us; 0us; 16467us; 2us; 32768us; 36us; 144us; 38us; 145us; 0us; 16466us; 12us; 32768us; 17us; 124us; 18us; 127us; 19us; 130us; 20us; 133us; 33us; 139us; 35us; 142us; 37us; 96us; 39us; 97us; 43us; 95us; 44us; 92us; 45us; 93us; 46us; 94us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 1us; 2us; 7us; 8us; 9us; 10us; 11us; 14us; 16us; 17us; 23us; 24us; 25us; 26us; 27us; 28us; 30us; 32us; 33us; 35us; 37us; 38us; 40us; 42us; 43us; 45us; 47us; 48us; 52us; 53us; 60us; 61us; 63us; 64us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 79us; 81us; 82us; 84us; 86us; 87us; 89us; 91us; 92us; 94us; 96us; 97us; 99us; 101us; 102us; 104us; 106us; 107us; 114us; 115us; 116us; 117us; 118us; 119us; 121us; 123us; 124us; 126us; 129us; 130us; 132us; 134us; 135us; 137us; 139us; 140us; 141us; 142us; 143us; 144us; 147us; 148us; 149us; 150us; 154us; 155us; 156us; 157us; 158us; 159us; 160us; 161us; 162us; 163us; 164us; 165us; 166us; 167us; 168us; 173us; 178us; 181us; 185us; 195us; 205us; 215us; 225us; 232us; 242us; 251us; 260us; 269us; 278us; 291us; 293us; 294us; 307us; 309us; 310us; 323us; 336us; 349us; 362us; 364us; 377us; 378us; 380us; 393us; 394us; 396us; 409us; 410us; 412us; 425us; 426us; 439us; 452us; 465us; 466us; 480us; 481us; 482us; 485us; 486us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 5us; 0us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 1us; 4us; 2us; 5us; 0us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 5us; 0us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 2us; 3us; 1us; 1us; 1us; 3us; 0us; 2us; 3us; 0us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 3us; 3us; 3us; 3us; 4us; 4us; 4us; 4us; 3us; 5us; 1us; 3us; 0us; 2us; 3us; 0us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 4us; 4us; 4us; 4us; 5us; 6us; 7us; 8us; 9us; 9us; 9us; 9us; 10us; 10us; 10us; 10us; 10us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 19us; 20us; 21us; 21us; 22us; 22us; 23us; 24us; 25us; 25us; 26us; 27us; 27us; 28us; 29us; 29us; 30us; 30us; 31us; 31us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 33us; 34us; 35us; 35us; 36us; 37us; 37us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 16390us; 16392us; 16393us; 16394us; 16395us; 65535us; 65535us; 16396us; 65535us; 65535us; 16397us; 65535us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 65535us; 65535us; 16401us; 65535us; 65535us; 65535us; 16403us; 16405us; 16406us; 16407us; 16408us; 16409us; 65535us; 65535us; 16410us; 65535us; 65535us; 16411us; 65535us; 65535us; 16412us; 65535us; 65535us; 16413us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 16417us; 16418us; 16419us; 16420us; 65535us; 65535us; 16421us; 65535us; 65535us; 16422us; 65535us; 65535us; 16423us; 65535us; 65535us; 16425us; 16426us; 16427us; 16428us; 65535us; 65535us; 16429us; 16431us; 65535us; 65535us; 16435us; 16437us; 16438us; 16439us; 16440us; 16441us; 16442us; 16443us; 16444us; 16445us; 16446us; 16447us; 16448us; 16449us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16450us; 65535us; 65535us; 16451us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 16457us; 65535us; 65535us; 16458us; 65535us; 65535us; 16459us; 65535us; 65535us; 65535us; 65535us; 65535us; 16463us; 65535us; 65535us; 16466us; 65535us; |]
let _fsyacc_reductions ()  =    [| 
# 472 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Terrabuild.Configuration.Project.AST.ProjectFile in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startProjectFile));
# 481 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "ProjectParser/Parser.fsy"
                                                       ProjectFile.Build _1 
                   )
# 54 "ProjectParser/Parser.fsy"
                 : Terrabuild.Configuration.Project.AST.ProjectFile));
# 492 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 57 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 502 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Project in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "ProjectParser/Parser.fsy"
                                                           _1 @ [_2] 
                   )
# 58 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 514 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Extension in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "ProjectParser/Parser.fsy"
                                                             _1 @ [_2] 
                   )
# 59 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 526 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Target in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "ProjectParser/Parser.fsy"
                                                          _1 @ [_2] 
                   )
# 60 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 538 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            let _4 = parseState.GetInput(4) :?> 'gentype_ExtensionComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "ProjectParser/Parser.fsy"
                                                                                             Extension.Build _2 _4 |> ProjectFileComponents.Extension 
                   )
# 64 "ProjectParser/Parser.fsy"
                 : 'gentype_Extension));
# 550 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 66 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 560 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionContainer in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "ProjectParser/Parser.fsy"
                                                                    _1 @ [_2] 
                   )
# 67 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 572 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionVariables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "ProjectParser/Parser.fsy"
                                                                    _1 @ [_2] 
                   )
# 68 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 584 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionScript in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "ProjectParser/Parser.fsy"
                                                                 _1 @ [_2] 
                   )
# 69 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 596 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionDefaults in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "ProjectParser/Parser.fsy"
                                                                   _1 @ [_2] 
                   )
# 70 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 608 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "ProjectParser/Parser.fsy"
                                                    ExtensionComponents.Container _3 
                   )
# 72 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionContainer));
# 619 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "ProjectParser/Parser.fsy"
                                                          ExtensionComponents.Variables _3 
                   )
# 74 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionVariables));
# 630 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "ProjectParser/Parser.fsy"
                                                 ExtensionComponents.Script _3 
                   )
# 76 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionScript));
# 641 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "ProjectParser/Parser.fsy"
                                                    ExtensionComponents.Defaults _3 
                   )
# 78 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionDefaults));
# 652 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "ProjectParser/Parser.fsy"
                                     Project.Build None [] |> ProjectFileComponents.Project 
                   )
# 82 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 662 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ProjectComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "ProjectParser/Parser.fsy"
                                                                     Project.Build None _3 |> ProjectFileComponents.Project 
                   )
# 83 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 673 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "ProjectParser/Parser.fsy"
                                                         Project.Build (Some _2) [] |> ProjectFileComponents.Project 
                   )
# 84 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 684 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            let _4 = parseState.GetInput(4) :?> 'gentype_ProjectComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "ProjectParser/Parser.fsy"
                                                                                         Project.Build (Some _2) _4 |> ProjectFileComponents.Project 
                   )
# 85 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 696 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 87 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 706 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectDependencies in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "ProjectParser/Parser.fsy"
                                                                   _1 @ [_2] 
                   )
# 88 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 718 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectOutputs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "ProjectParser/Parser.fsy"
                                                              _1 @ [_2] 
                   )
# 89 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 730 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectIgnores in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "ProjectParser/Parser.fsy"
                                                              _1 @ [_2] 
                   )
# 90 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 742 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectIncludes in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "ProjectParser/Parser.fsy"
                                                               _1 @ [_2] 
                   )
# 91 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 754 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectLabels in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "ProjectParser/Parser.fsy"
                                                             _1 @ [_2] 
                   )
# 92 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 766 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "ProjectParser/Parser.fsy"
                                                             ProjectComponents.Dependencies _3 
                   )
# 94 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectDependencies));
# 777 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "ProjectParser/Parser.fsy"
                                                        ProjectComponents.Outputs _3 
                   )
# 96 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectOutputs));
# 788 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "ProjectParser/Parser.fsy"
                                                        ProjectComponents.Ignores _3 
                   )
# 98 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectIgnores));
# 799 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "ProjectParser/Parser.fsy"
                                                         ProjectComponents.Includes _3 
                   )
# 100 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectIncludes));
# 810 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "ProjectParser/Parser.fsy"
                                                       ProjectComponents.Labels _3 
                   )
# 102 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectLabels));
# 821 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_TargetComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "ProjectParser/Parser.fsy"
                                                                              Target.Build _2 _4 |> ProjectFileComponents.Target 
                   )
# 105 "ProjectParser/Parser.fsy"
                 : 'gentype_Target));
# 833 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 107 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 843 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetDependsOn in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "ProjectParser/Parser.fsy"
                                                              _1 @ [_2] 
                   )
# 108 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 855 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetRebuild in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "ProjectParser/Parser.fsy"
                                                            _1 @ [_2] 
                   )
# 109 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 867 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetOutputs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "ProjectParser/Parser.fsy"
                                                            _1 @ [_2] 
                   )
# 110 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 879 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetStep in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "ProjectParser/Parser.fsy"
                                                         _1 @ [_2] 
                   )
# 111 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 891 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfTargetIdentifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "ProjectParser/Parser.fsy"
                                                                      TargetComponents.DependsOn _3 
                   )
# 113 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetDependsOn));
# 902 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "ProjectParser/Parser.fsy"
                                                TargetComponents.Rebuild _3 
                   )
# 115 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetRebuild));
# 913 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "ProjectParser/Parser.fsy"
                                                        TargetComponents.Outputs _3 
                   )
# 117 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetOutputs));
# 924 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionIdentifier in
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "ProjectParser/Parser.fsy"
                                                            TargetComponents.Step { Extension = _1; Command = _2; Parameters = Map.empty } 
                   )
# 119 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetStep));
# 936 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionIdentifier in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "ProjectParser/Parser.fsy"
                                                                    TargetComponents.Step { Extension = _1; Command = _2; Parameters = _3 } 
                   )
# 120 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetStep));
# 949 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "ProjectParser/Parser.fsy"
                                  true 
                   )
# 124 "ProjectParser/Parser.fsy"
                 : 'gentype_Bool));
# 959 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "ProjectParser/Parser.fsy"
                                   false 
                   )
# 125 "ProjectParser/Parser.fsy"
                 : 'gentype_Bool));
# 969 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "ProjectParser/Parser.fsy"
                                    _1 
                   )
# 128 "ProjectParser/Parser.fsy"
                 : 'gentype_String));
# 980 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Strings in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "ProjectParser/Parser.fsy"
                                                           _2 
                   )
# 130 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfString));
# 991 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 132 "ProjectParser/Parser.fsy"
                 : 'gentype_Strings));
# 1001 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Strings in
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "ProjectParser/Parser.fsy"
                                            _1 @ [_2] 
                   )
# 133 "ProjectParser/Parser.fsy"
                 : 'gentype_Strings));
# 1013 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Identifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "ProjectParser/Parser.fsy"
                                                               _2 
                   )
# 136 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfIdentifiers));
# 1024 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 138 "ProjectParser/Parser.fsy"
                 : 'gentype_Identifiers));
# 1034 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Identifiers in
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "ProjectParser/Parser.fsy"
                                                    _1 @ [_2] 
                   )
# 139 "ProjectParser/Parser.fsy"
                 : 'gentype_Identifiers));
# 1046 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetIdentifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "ProjectParser/Parser.fsy"
                                                                     _2 
                   )
# 143 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfTargetIdentifiers));
# 1057 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 145 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifiers));
# 1067 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetIdentifiers in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetIdentifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "ProjectParser/Parser.fsy"
                                                                _1 @ [_2] 
                   )
# 146 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifiers));
# 1079 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "ProjectParser/Parser.fsy"
                                               _1 
                   )
# 149 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifier));
# 1090 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "ProjectParser/Parser.fsy"
                                        _1 
                   )
# 150 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifier));
# 1101 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "ProjectParser/Parser.fsy"
                                                  _1 
                   )
# 153 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionIdentifier));
# 1112 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "ProjectParser/Parser.fsy"
                                        _1 
                   )
# 154 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionIdentifier));
# 1123 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "ProjectParser/Parser.fsy"
                                     Expr.Nothing 
                   )
# 158 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1133 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "ProjectParser/Parser.fsy"
                                  Expr.Boolean true 
                   )
# 159 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1143 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "ProjectParser/Parser.fsy"
                                   Expr.Boolean false 
                   )
# 160 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1153 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "ProjectParser/Parser.fsy"
                                    Expr.String _1 
                   )
# 161 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1164 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "ProjectParser/Parser.fsy"
                                    Expr.Number _1 
                   )
# 162 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1175 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "ProjectParser/Parser.fsy"
                                      Expr.Variable _1 
                   )
# 163 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1186 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "ProjectParser/Parser.fsy"
                                      Expr.List _1 
                   )
# 165 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1197 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "ProjectParser/Parser.fsy"
                                     Expr.Map _1 
                   )
# 166 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1208 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprIndex in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "ProjectParser/Parser.fsy"
                                                                      Expr.Function (Function.Item, [_1; _3]) 
                   )
# 168 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1220 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprIndex in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "ProjectParser/Parser.fsy"
                                                                               Expr.Function (Function.TryItem, [_1; _3]) 
                   )
# 169 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1232 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "ProjectParser/Parser.fsy"
                                             Expr.Function (Function.Equal, [_1; _3]) 
                   )
# 170 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1244 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "ProjectParser/Parser.fsy"
                                                 Expr.Function (Function.NotEqual, [_1; _3]) 
                   )
# 171 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1256 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "ProjectParser/Parser.fsy"
                                            Expr.Function (Function.Plus, [_1; _3]) 
                   )
# 172 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1268 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "ProjectParser/Parser.fsy"
                                             Expr.Function (Function.Minus, [_1; _3]) 
                   )
# 173 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1280 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "ProjectParser/Parser.fsy"
                                                     Expr.Function (Function.Trim, [_3]) 
                   )
# 174 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1291 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "ProjectParser/Parser.fsy"
                                                      Expr.Function (Function.Upper, [_3]) 
                   )
# 175 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1302 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "ProjectParser/Parser.fsy"
                                                      Expr.Function (Function.Lower, [_3]) 
                   )
# 176 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1313 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "ProjectParser/Parser.fsy"
                                                        Expr.Function (Function.Version, [_3]) 
                   )
# 177 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1324 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "ProjectParser/Parser.fsy"
                                                       Expr.Function (Function.Coalesce, [_1; _3]) 
                   )
# 178 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1336 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "ProjectParser/Parser.fsy"
                                                           Expr.Function (Function.Ternary, [_1; _3; _5] ) 
                   )
# 179 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1349 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "ProjectParser/Parser.fsy"
                                  _1 
                   )
# 182 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprIndex));
# 1360 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprListContent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "ProjectParser/Parser.fsy"
                                                                   _2 
                   )
# 185 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprList));
# 1371 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 187 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprListContent));
# 1381 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprListContent in
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "ProjectParser/Parser.fsy"
                                                  _1 @ [_2] 
                   )
# 188 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprListContent));
# 1393 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprMapContent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "ProjectParser/Parser.fsy"
                                                          _2 
                   )
# 191 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMap));
# 1404 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "ProjectParser/Parser.fsy"
                                         Map.empty 
                   )
# 193 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMapContent));
# 1414 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprMapContent in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "ProjectParser/Parser.fsy"
                                                     _1.Add (_2, _3) 
                   )
# 194 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMapContent));
|]
# 1428 "Gen/ProjectParser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 50;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let ProjectFile lexer lexbuf : Terrabuild.Configuration.Project.AST.ProjectFile =
    engine lexer lexbuf 0 :?> _
