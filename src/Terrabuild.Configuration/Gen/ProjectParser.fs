// Implementation file for parser generated by fsyacc
module internal Terrabuild.Configuration.Project.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "ProjectParser/Parser.fsy"
 
open Terrabuild.Configuration.AST
open Terrabuild.Configuration.Project.AST
open Terrabuild.Expressions


#if DEBUG
let debugPrint s = printfn "### %s" s
#else
let debugPrint s = ignore s
#endif


# 20 "Gen/ProjectParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | DEPENDENCIES
  | LINKS
  | OUTPUTS
  | IGNORES
  | INCLUDES
  | LABELS
  | VARIABLES
  | CONTAINER
  | PLATFORM
  | INIT
  | SCRIPT
  | DEPENDS_ON
  | REBUILD
  | CACHE
  | DEFAULTS
  | NAME
  | PROJECT
  | EXTENSION
  | TARGET
  | EOF
  | DOUBLE_QUESTION
  | QUESTION
  | COLON
  | BANG
  | AND
  | OR
  | TRIM
  | UPPER
  | LOWER
  | REPLACE
  | COUNT
  | VERSION
  | FORMAT
  | TOSTRING
  | MINUS
  | PLUS
  | COMMA
  | EQUAL
  | DOUBLE_EQUAL
  | NOT_EQUAL
  | LPAREN
  | RPAREN
  | DOT
  | DOT_QUESTION
  | LSQBRACKET
  | RSQBRACKET
  | LBRACE
  | RBRACE
  | NUMBER of (int)
  | KEY of (string)
  | VARIABLE of (string)
  | TARGET_IDENTIFIER of (string)
  | EXTENSION_IDENTIFIER of (string)
  | IDENTIFIER of (string)
  | STRING of (string)
  | NOTHING
  | TRUE
  | FALSE
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_DEPENDENCIES
    | TOKEN_LINKS
    | TOKEN_OUTPUTS
    | TOKEN_IGNORES
    | TOKEN_INCLUDES
    | TOKEN_LABELS
    | TOKEN_VARIABLES
    | TOKEN_CONTAINER
    | TOKEN_PLATFORM
    | TOKEN_INIT
    | TOKEN_SCRIPT
    | TOKEN_DEPENDS_ON
    | TOKEN_REBUILD
    | TOKEN_CACHE
    | TOKEN_DEFAULTS
    | TOKEN_NAME
    | TOKEN_PROJECT
    | TOKEN_EXTENSION
    | TOKEN_TARGET
    | TOKEN_EOF
    | TOKEN_DOUBLE_QUESTION
    | TOKEN_QUESTION
    | TOKEN_COLON
    | TOKEN_BANG
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_TRIM
    | TOKEN_UPPER
    | TOKEN_LOWER
    | TOKEN_REPLACE
    | TOKEN_COUNT
    | TOKEN_VERSION
    | TOKEN_FORMAT
    | TOKEN_TOSTRING
    | TOKEN_MINUS
    | TOKEN_PLUS
    | TOKEN_COMMA
    | TOKEN_EQUAL
    | TOKEN_DOUBLE_EQUAL
    | TOKEN_NOT_EQUAL
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_DOT
    | TOKEN_DOT_QUESTION
    | TOKEN_LSQBRACKET
    | TOKEN_RSQBRACKET
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_NUMBER
    | TOKEN_KEY
    | TOKEN_VARIABLE
    | TOKEN_TARGET_IDENTIFIER
    | TOKEN_EXTENSION_IDENTIFIER
    | TOKEN_IDENTIFIER
    | TOKEN_STRING
    | TOKEN_NOTHING
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startProjectFile
    | NONTERM_ProjectFile
    | NONTERM_ProjectFileComponents
    | NONTERM_Extension
    | NONTERM_ExtensionComponents
    | NONTERM_ExtensionContainer
    | NONTERM_ExtensionPlaform
    | NONTERM_ExtensionVariables
    | NONTERM_ExtensionScript
    | NONTERM_ExtensionDefaults
    | NONTERM_Project
    | NONTERM_ProjectComponents
    | NONTERM_ProjectDependencies
    | NONTERM_ProjectLinks
    | NONTERM_ProjectOutputs
    | NONTERM_ProjectIgnores
    | NONTERM_ProjectIncludes
    | NONTERM_ProjectLabels
    | NONTERM_Target
    | NONTERM_TargetComponents
    | NONTERM_TargetDependsOn
    | NONTERM_TargetRebuild
    | NONTERM_TargetOutputs
    | NONTERM_TargetCache
    | NONTERM_TargetStep
    | NONTERM_Expr
    | NONTERM_TargetIdentifier
    | NONTERM_ExtensionIdentifier
    | NONTERM_ExprIndex
    | NONTERM_Bool
    | NONTERM_String
    | NONTERM_ExprTuple
    | NONTERM_ExprTupleContent
    | NONTERM_ExprList
    | NONTERM_ExprListContent
    | NONTERM_ExprMap
    | NONTERM_ExprMapContent
    | NONTERM_ListOfString
    | NONTERM_Strings
    | NONTERM_ListOfIdentifiers
    | NONTERM_Identifiers
    | NONTERM_ListOfTargetIdentifiers
    | NONTERM_TargetIdentifiers

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | DEPENDENCIES  -> 0 
  | LINKS  -> 1 
  | OUTPUTS  -> 2 
  | IGNORES  -> 3 
  | INCLUDES  -> 4 
  | LABELS  -> 5 
  | VARIABLES  -> 6 
  | CONTAINER  -> 7 
  | PLATFORM  -> 8 
  | INIT  -> 9 
  | SCRIPT  -> 10 
  | DEPENDS_ON  -> 11 
  | REBUILD  -> 12 
  | CACHE  -> 13 
  | DEFAULTS  -> 14 
  | NAME  -> 15 
  | PROJECT  -> 16 
  | EXTENSION  -> 17 
  | TARGET  -> 18 
  | EOF  -> 19 
  | DOUBLE_QUESTION  -> 20 
  | QUESTION  -> 21 
  | COLON  -> 22 
  | BANG  -> 23 
  | AND  -> 24 
  | OR  -> 25 
  | TRIM  -> 26 
  | UPPER  -> 27 
  | LOWER  -> 28 
  | REPLACE  -> 29 
  | COUNT  -> 30 
  | VERSION  -> 31 
  | FORMAT  -> 32 
  | TOSTRING  -> 33 
  | MINUS  -> 34 
  | PLUS  -> 35 
  | COMMA  -> 36 
  | EQUAL  -> 37 
  | DOUBLE_EQUAL  -> 38 
  | NOT_EQUAL  -> 39 
  | LPAREN  -> 40 
  | RPAREN  -> 41 
  | DOT  -> 42 
  | DOT_QUESTION  -> 43 
  | LSQBRACKET  -> 44 
  | RSQBRACKET  -> 45 
  | LBRACE  -> 46 
  | RBRACE  -> 47 
  | NUMBER _ -> 48 
  | KEY _ -> 49 
  | VARIABLE _ -> 50 
  | TARGET_IDENTIFIER _ -> 51 
  | EXTENSION_IDENTIFIER _ -> 52 
  | IDENTIFIER _ -> 53 
  | STRING _ -> 54 
  | NOTHING  -> 55 
  | TRUE  -> 56 
  | FALSE  -> 57 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_DEPENDENCIES 
  | 1 -> TOKEN_LINKS 
  | 2 -> TOKEN_OUTPUTS 
  | 3 -> TOKEN_IGNORES 
  | 4 -> TOKEN_INCLUDES 
  | 5 -> TOKEN_LABELS 
  | 6 -> TOKEN_VARIABLES 
  | 7 -> TOKEN_CONTAINER 
  | 8 -> TOKEN_PLATFORM 
  | 9 -> TOKEN_INIT 
  | 10 -> TOKEN_SCRIPT 
  | 11 -> TOKEN_DEPENDS_ON 
  | 12 -> TOKEN_REBUILD 
  | 13 -> TOKEN_CACHE 
  | 14 -> TOKEN_DEFAULTS 
  | 15 -> TOKEN_NAME 
  | 16 -> TOKEN_PROJECT 
  | 17 -> TOKEN_EXTENSION 
  | 18 -> TOKEN_TARGET 
  | 19 -> TOKEN_EOF 
  | 20 -> TOKEN_DOUBLE_QUESTION 
  | 21 -> TOKEN_QUESTION 
  | 22 -> TOKEN_COLON 
  | 23 -> TOKEN_BANG 
  | 24 -> TOKEN_AND 
  | 25 -> TOKEN_OR 
  | 26 -> TOKEN_TRIM 
  | 27 -> TOKEN_UPPER 
  | 28 -> TOKEN_LOWER 
  | 29 -> TOKEN_REPLACE 
  | 30 -> TOKEN_COUNT 
  | 31 -> TOKEN_VERSION 
  | 32 -> TOKEN_FORMAT 
  | 33 -> TOKEN_TOSTRING 
  | 34 -> TOKEN_MINUS 
  | 35 -> TOKEN_PLUS 
  | 36 -> TOKEN_COMMA 
  | 37 -> TOKEN_EQUAL 
  | 38 -> TOKEN_DOUBLE_EQUAL 
  | 39 -> TOKEN_NOT_EQUAL 
  | 40 -> TOKEN_LPAREN 
  | 41 -> TOKEN_RPAREN 
  | 42 -> TOKEN_DOT 
  | 43 -> TOKEN_DOT_QUESTION 
  | 44 -> TOKEN_LSQBRACKET 
  | 45 -> TOKEN_RSQBRACKET 
  | 46 -> TOKEN_LBRACE 
  | 47 -> TOKEN_RBRACE 
  | 48 -> TOKEN_NUMBER 
  | 49 -> TOKEN_KEY 
  | 50 -> TOKEN_VARIABLE 
  | 51 -> TOKEN_TARGET_IDENTIFIER 
  | 52 -> TOKEN_EXTENSION_IDENTIFIER 
  | 53 -> TOKEN_IDENTIFIER 
  | 54 -> TOKEN_STRING 
  | 55 -> TOKEN_NOTHING 
  | 56 -> TOKEN_TRUE 
  | 57 -> TOKEN_FALSE 
  | 60 -> TOKEN_end_of_input
  | 58 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startProjectFile 
    | 1 -> NONTERM_ProjectFile 
    | 2 -> NONTERM_ProjectFileComponents 
    | 3 -> NONTERM_ProjectFileComponents 
    | 4 -> NONTERM_ProjectFileComponents 
    | 5 -> NONTERM_ProjectFileComponents 
    | 6 -> NONTERM_Extension 
    | 7 -> NONTERM_ExtensionComponents 
    | 8 -> NONTERM_ExtensionComponents 
    | 9 -> NONTERM_ExtensionComponents 
    | 10 -> NONTERM_ExtensionComponents 
    | 11 -> NONTERM_ExtensionComponents 
    | 12 -> NONTERM_ExtensionComponents 
    | 13 -> NONTERM_ExtensionContainer 
    | 14 -> NONTERM_ExtensionPlaform 
    | 15 -> NONTERM_ExtensionVariables 
    | 16 -> NONTERM_ExtensionScript 
    | 17 -> NONTERM_ExtensionDefaults 
    | 18 -> NONTERM_Project 
    | 19 -> NONTERM_Project 
    | 20 -> NONTERM_Project 
    | 21 -> NONTERM_Project 
    | 22 -> NONTERM_ProjectComponents 
    | 23 -> NONTERM_ProjectComponents 
    | 24 -> NONTERM_ProjectComponents 
    | 25 -> NONTERM_ProjectComponents 
    | 26 -> NONTERM_ProjectComponents 
    | 27 -> NONTERM_ProjectComponents 
    | 28 -> NONTERM_ProjectComponents 
    | 29 -> NONTERM_ProjectDependencies 
    | 30 -> NONTERM_ProjectLinks 
    | 31 -> NONTERM_ProjectOutputs 
    | 32 -> NONTERM_ProjectIgnores 
    | 33 -> NONTERM_ProjectIncludes 
    | 34 -> NONTERM_ProjectLabels 
    | 35 -> NONTERM_Target 
    | 36 -> NONTERM_TargetComponents 
    | 37 -> NONTERM_TargetComponents 
    | 38 -> NONTERM_TargetComponents 
    | 39 -> NONTERM_TargetComponents 
    | 40 -> NONTERM_TargetComponents 
    | 41 -> NONTERM_TargetComponents 
    | 42 -> NONTERM_TargetDependsOn 
    | 43 -> NONTERM_TargetRebuild 
    | 44 -> NONTERM_TargetOutputs 
    | 45 -> NONTERM_TargetCache 
    | 46 -> NONTERM_TargetStep 
    | 47 -> NONTERM_TargetStep 
    | 48 -> NONTERM_Expr 
    | 49 -> NONTERM_Expr 
    | 50 -> NONTERM_Expr 
    | 51 -> NONTERM_Expr 
    | 52 -> NONTERM_Expr 
    | 53 -> NONTERM_Expr 
    | 54 -> NONTERM_Expr 
    | 55 -> NONTERM_Expr 
    | 56 -> NONTERM_Expr 
    | 57 -> NONTERM_Expr 
    | 58 -> NONTERM_Expr 
    | 59 -> NONTERM_Expr 
    | 60 -> NONTERM_Expr 
    | 61 -> NONTERM_Expr 
    | 62 -> NONTERM_Expr 
    | 63 -> NONTERM_Expr 
    | 64 -> NONTERM_Expr 
    | 65 -> NONTERM_Expr 
    | 66 -> NONTERM_Expr 
    | 67 -> NONTERM_Expr 
    | 68 -> NONTERM_Expr 
    | 69 -> NONTERM_Expr 
    | 70 -> NONTERM_Expr 
    | 71 -> NONTERM_Expr 
    | 72 -> NONTERM_Expr 
    | 73 -> NONTERM_Expr 
    | 74 -> NONTERM_Expr 
    | 75 -> NONTERM_TargetIdentifier 
    | 76 -> NONTERM_TargetIdentifier 
    | 77 -> NONTERM_ExtensionIdentifier 
    | 78 -> NONTERM_ExtensionIdentifier 
    | 79 -> NONTERM_ExprIndex 
    | 80 -> NONTERM_ExprIndex 
    | 81 -> NONTERM_Bool 
    | 82 -> NONTERM_Bool 
    | 83 -> NONTERM_String 
    | 84 -> NONTERM_ExprTuple 
    | 85 -> NONTERM_ExprTupleContent 
    | 86 -> NONTERM_ExprTupleContent 
    | 87 -> NONTERM_ExprTupleContent 
    | 88 -> NONTERM_ExprList 
    | 89 -> NONTERM_ExprListContent 
    | 90 -> NONTERM_ExprListContent 
    | 91 -> NONTERM_ExprMap 
    | 92 -> NONTERM_ExprMapContent 
    | 93 -> NONTERM_ExprMapContent 
    | 94 -> NONTERM_ListOfString 
    | 95 -> NONTERM_Strings 
    | 96 -> NONTERM_Strings 
    | 97 -> NONTERM_ListOfIdentifiers 
    | 98 -> NONTERM_Identifiers 
    | 99 -> NONTERM_Identifiers 
    | 100 -> NONTERM_ListOfTargetIdentifiers 
    | 101 -> NONTERM_TargetIdentifiers 
    | 102 -> NONTERM_TargetIdentifiers 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 60 
let _fsyacc_tagOfErrorTerminal = 58

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | DEPENDENCIES  -> "DEPENDENCIES" 
  | LINKS  -> "LINKS" 
  | OUTPUTS  -> "OUTPUTS" 
  | IGNORES  -> "IGNORES" 
  | INCLUDES  -> "INCLUDES" 
  | LABELS  -> "LABELS" 
  | VARIABLES  -> "VARIABLES" 
  | CONTAINER  -> "CONTAINER" 
  | PLATFORM  -> "PLATFORM" 
  | INIT  -> "INIT" 
  | SCRIPT  -> "SCRIPT" 
  | DEPENDS_ON  -> "DEPENDS_ON" 
  | REBUILD  -> "REBUILD" 
  | CACHE  -> "CACHE" 
  | DEFAULTS  -> "DEFAULTS" 
  | NAME  -> "NAME" 
  | PROJECT  -> "PROJECT" 
  | EXTENSION  -> "EXTENSION" 
  | TARGET  -> "TARGET" 
  | EOF  -> "EOF" 
  | DOUBLE_QUESTION  -> "DOUBLE_QUESTION" 
  | QUESTION  -> "QUESTION" 
  | COLON  -> "COLON" 
  | BANG  -> "BANG" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | TRIM  -> "TRIM" 
  | UPPER  -> "UPPER" 
  | LOWER  -> "LOWER" 
  | REPLACE  -> "REPLACE" 
  | COUNT  -> "COUNT" 
  | VERSION  -> "VERSION" 
  | FORMAT  -> "FORMAT" 
  | TOSTRING  -> "TOSTRING" 
  | MINUS  -> "MINUS" 
  | PLUS  -> "PLUS" 
  | COMMA  -> "COMMA" 
  | EQUAL  -> "EQUAL" 
  | DOUBLE_EQUAL  -> "DOUBLE_EQUAL" 
  | NOT_EQUAL  -> "NOT_EQUAL" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | DOT  -> "DOT" 
  | DOT_QUESTION  -> "DOT_QUESTION" 
  | LSQBRACKET  -> "LSQBRACKET" 
  | RSQBRACKET  -> "RSQBRACKET" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | NUMBER _ -> "NUMBER" 
  | KEY _ -> "KEY" 
  | VARIABLE _ -> "VARIABLE" 
  | TARGET_IDENTIFIER _ -> "TARGET_IDENTIFIER" 
  | EXTENSION_IDENTIFIER _ -> "EXTENSION_IDENTIFIER" 
  | IDENTIFIER _ -> "IDENTIFIER" 
  | STRING _ -> "STRING" 
  | NOTHING  -> "NOTHING" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | DEPENDENCIES  -> (null : System.Object) 
  | LINKS  -> (null : System.Object) 
  | OUTPUTS  -> (null : System.Object) 
  | IGNORES  -> (null : System.Object) 
  | INCLUDES  -> (null : System.Object) 
  | LABELS  -> (null : System.Object) 
  | VARIABLES  -> (null : System.Object) 
  | CONTAINER  -> (null : System.Object) 
  | PLATFORM  -> (null : System.Object) 
  | INIT  -> (null : System.Object) 
  | SCRIPT  -> (null : System.Object) 
  | DEPENDS_ON  -> (null : System.Object) 
  | REBUILD  -> (null : System.Object) 
  | CACHE  -> (null : System.Object) 
  | DEFAULTS  -> (null : System.Object) 
  | NAME  -> (null : System.Object) 
  | PROJECT  -> (null : System.Object) 
  | EXTENSION  -> (null : System.Object) 
  | TARGET  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | DOUBLE_QUESTION  -> (null : System.Object) 
  | QUESTION  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | TRIM  -> (null : System.Object) 
  | UPPER  -> (null : System.Object) 
  | LOWER  -> (null : System.Object) 
  | REPLACE  -> (null : System.Object) 
  | COUNT  -> (null : System.Object) 
  | VERSION  -> (null : System.Object) 
  | FORMAT  -> (null : System.Object) 
  | TOSTRING  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | DOUBLE_EQUAL  -> (null : System.Object) 
  | NOT_EQUAL  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | DOT_QUESTION  -> (null : System.Object) 
  | LSQBRACKET  -> (null : System.Object) 
  | RSQBRACKET  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | NUMBER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VARIABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TARGET_IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EXTENSION_IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NOTHING  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;1us;65535us;0us;2us;1us;65535us;2us;5us;1us;65535us;9us;10us;1us;65535us;10us;12us;1us;65535us;10us;13us;1us;65535us;10us;14us;1us;65535us;10us;15us;1us;65535us;10us;16us;1us;65535us;2us;4us;2us;65535us;33us;34us;37us;38us;2us;65535us;34us;40us;38us;40us;2us;65535us;34us;41us;38us;41us;2us;65535us;34us;42us;38us;42us;2us;65535us;34us;43us;38us;43us;2us;65535us;34us;44us;38us;44us;2us;65535us;34us;45us;38us;45us;1us;65535us;2us;6us;1us;65535us;66us;67us;1us;65535us;67us;69us;1us;65535us;67us;70us;1us;65535us;67us;71us;1us;65535us;67us;72us;1us;65535us;67us;73us;17us;65535us;18us;19us;21us;22us;78us;79us;115us;97us;116us;98us;117us;99us;118us;100us;119us;101us;120us;102us;137us;103us;138us;104us;139us;105us;140us;106us;148us;107us;151us;108us;153us;109us;158us;110us;1us;65535us;164us;166us;3us;65535us;7us;8us;32us;36us;67us;86us;2us;65535us;111us;112us;113us;114us;0us;65535us;3us;65535us;27us;28us;84us;85us;160us;162us;8us;65535us;121us;122us;123us;124us;125us;126us;127us;128us;129us;130us;131us;132us;133us;134us;135us;136us;1us;65535us;148us;149us;17us;65535us;18us;95us;21us;95us;78us;95us;115us;95us;116us;95us;117us;95us;118us;95us;119us;95us;120us;95us;137us;95us;138us;95us;139us;95us;140us;95us;148us;95us;151us;95us;153us;95us;158us;95us;1us;65535us;152us;153us;19us;65535us;18us;96us;21us;96us;30us;31us;78us;96us;87us;88us;115us;96us;116us;96us;117us;96us;118us;96us;119us;96us;120us;96us;137us;96us;138us;96us;139us;96us;140us;96us;148us;96us;151us;96us;153us;96us;158us;96us;1us;65535us;155us;156us;8us;65535us;24us;25us;47us;48us;50us;51us;53us;54us;56us;57us;59us;60us;62us;63us;81us;82us;1us;65535us;159us;160us;0us;65535us;0us;65535us;1us;65535us;75us;76us;1us;65535us;163us;164us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;5us;7us;9us;11us;13us;15us;17us;19us;21us;24us;27us;30us;33us;36us;39us;42us;44us;46us;48us;50us;52us;54us;56us;74us;76us;80us;83us;84us;88us;97us;99us;117us;119us;139us;141us;150us;152us;153us;154us;156us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;4us;1us;3us;4us;5us;1us;1us;1us;3us;1us;4us;1us;5us;1us;6us;1us;6us;1us;6us;6us;6us;8us;9us;10us;11us;12us;1us;6us;1us;8us;1us;9us;1us;10us;1us;11us;1us;12us;1us;13us;1us;13us;11us;13us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;1us;14us;1us;14us;11us;14us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;1us;15us;1us;15us;1us;15us;1us;16us;1us;16us;1us;16us;1us;17us;1us;17us;1us;17us;4us;18us;19us;20us;21us;1us;19us;7us;19us;23us;24us;25us;26us;27us;28us;1us;19us;2us;20us;21us;1us;21us;7us;21us;23us;24us;25us;26us;27us;28us;1us;21us;1us;23us;1us;24us;1us;25us;1us;26us;1us;27us;1us;28us;1us;29us;1us;29us;1us;29us;1us;30us;1us;30us;1us;30us;1us;31us;1us;31us;1us;31us;1us;32us;1us;32us;1us;32us;1us;33us;1us;33us;1us;33us;1us;34us;1us;34us;1us;34us;1us;35us;1us;35us;1us;35us;6us;35us;37us;38us;39us;40us;41us;1us;35us;1us;37us;1us;38us;1us;39us;1us;40us;1us;41us;1us;42us;1us;42us;1us;42us;1us;43us;1us;43us;11us;43us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;1us;44us;1us;44us;1us;44us;1us;45us;1us;45us;1us;45us;2us;46us;47us;2us;46us;47us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;11us;56us;57us;58us;58us;59us;60us;61us;62us;63us;72us;73us;11us;56us;57us;58us;59us;59us;60us;61us;62us;63us;72us;73us;11us;56us;57us;58us;59us;60us;60us;61us;62us;63us;72us;73us;11us;56us;57us;58us;59us;60us;61us;61us;62us;63us;72us;73us;11us;56us;57us;58us;59us;60us;61us;62us;62us;63us;72us;73us;11us;56us;57us;58us;59us;60us;61us;62us;63us;63us;72us;73us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;72us;73us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;73us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;73us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;74us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;86us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;87us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;90us;11us;56us;57us;58us;59us;60us;61us;62us;63us;72us;73us;93us;1us;56us;1us;56us;1us;57us;1us;57us;1us;58us;1us;59us;1us;60us;1us;61us;1us;62us;1us;63us;1us;64us;1us;64us;1us;65us;1us;65us;1us;66us;1us;66us;1us;67us;1us;67us;1us;68us;1us;68us;1us;69us;1us;69us;1us;70us;1us;70us;1us;71us;1us;71us;1us;72us;1us;73us;1us;73us;1us;74us;1us;75us;1us;76us;1us;77us;1us;78us;1us;79us;1us;80us;1us;83us;1us;84us;2us;84us;87us;1us;84us;1us;87us;1us;88us;2us;88us;90us;1us;88us;1us;91us;2us;91us;93us;1us;91us;1us;93us;1us;94us;2us;94us;96us;1us;94us;1us;96us;1us;100us;2us;100us;102us;1us;100us;1us;102us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;9us;11us;13us;15us;17us;19us;21us;23us;30us;32us;34us;36us;38us;40us;42us;44us;46us;58us;60us;62us;74us;76us;78us;80us;82us;84us;86us;88us;90us;92us;97us;99us;107us;109us;112us;114us;122us;124us;126us;128us;130us;132us;134us;136us;138us;140us;142us;144us;146us;148us;150us;152us;154us;156us;158us;160us;162us;164us;166us;168us;170us;172us;174us;176us;178us;185us;187us;189us;191us;193us;195us;197us;199us;201us;203us;205us;207us;219us;221us;223us;225us;227us;229us;231us;234us;237us;239us;241us;243us;245us;247us;249us;251us;253us;255us;267us;279us;291us;303us;315us;327us;339us;351us;363us;375us;387us;399us;411us;423us;425us;427us;429us;431us;433us;435us;437us;439us;441us;443us;445us;447us;449us;451us;453us;455us;457us;459us;461us;463us;465us;467us;469us;471us;473us;475us;477us;479us;481us;483us;485us;487us;489us;491us;493us;495us;497us;499us;502us;504us;506us;508us;511us;513us;515us;518us;520us;522us;524us;527us;529us;531us;533us;536us;538us;|]
let _fsyacc_action_rows = 167
let _fsyacc_actionTableElements = [|0us;16386us;0us;49152us;4us;32768us;16us;32us;17us;7us;18us;64us;19us;3us;0us;16385us;0us;16387us;0us;16388us;0us;16389us;2us;32768us;52us;143us;53us;144us;1us;32768us;46us;9us;0us;16391us;6us;32768us;6us;23us;7us;17us;8us;20us;10us;26us;14us;29us;47us;11us;0us;16390us;0us;16392us;0us;16393us;0us;16394us;0us;16395us;0us;16396us;1us;32768us;37us;18us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;10us;16397us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;1us;32768us;37us;21us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;10us;16398us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;1us;32768us;37us;24us;1us;32768us;44us;159us;0us;16399us;1us;32768us;37us;27us;1us;32768us;54us;147us;0us;16400us;1us;32768us;37us;30us;1us;32768us;46us;155us;0us;16401us;3us;16402us;46us;33us;52us;143us;53us;144us;0us;16406us;7us;32768us;0us;46us;1us;49us;2us;52us;3us;55us;4us;58us;5us;61us;47us;35us;0us;16403us;1us;16404us;46us;37us;0us;16406us;7us;32768us;0us;46us;1us;49us;2us;52us;3us;55us;4us;58us;5us;61us;47us;39us;0us;16405us;0us;16407us;0us;16408us;0us;16409us;0us;16410us;0us;16411us;0us;16412us;1us;32768us;37us;47us;1us;32768us;44us;159us;0us;16413us;1us;32768us;37us;50us;1us;32768us;44us;159us;0us;16414us;1us;32768us;37us;53us;1us;32768us;44us;159us;0us;16415us;1us;32768us;37us;56us;1us;32768us;44us;159us;0us;16416us;1us;32768us;37us;59us;1us;32768us;44us;159us;0us;16417us;1us;32768us;37us;62us;1us;32768us;44us;159us;0us;16418us;1us;32768us;53us;65us;1us;32768us;46us;66us;0us;16420us;7us;32768us;2us;80us;11us;74us;12us;77us;13us;83us;47us;68us;52us;143us;53us;144us;0us;16419us;0us;16421us;0us;16422us;0us;16423us;0us;16424us;0us;16425us;1us;32768us;37us;75us;1us;32768us;44us;163us;0us;16426us;1us;32768us;37us;78us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;10us;16427us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;1us;32768us;37us;81us;1us;32768us;44us;159us;0us;16428us;1us;32768us;37us;84us;1us;32768us;54us;147us;0us;16429us;1us;32768us;53us;87us;1us;16430us;46us;155us;0us;16431us;0us;16432us;0us;16433us;0us;16434us;0us;16435us;0us;16436us;0us;16437us;0us;16438us;0us;16439us;6us;16442us;24us;119us;25us;120us;34us;118us;35us;117us;42us;111us;43us;113us;6us;16443us;24us;119us;25us;120us;34us;118us;35us;117us;42us;111us;43us;113us;4us;16444us;24us;119us;25us;120us;42us;111us;43us;113us;4us;16445us;24us;119us;25us;120us;42us;111us;43us;113us;2us;16446us;42us;111us;43us;113us;2us;16447us;42us;111us;43us;113us;8us;16456us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;11us;32768us;20us;137us;21us;138us;22us;139us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;10us;16457us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;0us;16458us;10us;16470us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;10us;16471us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;10us;16474us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;10us;16477us;20us;137us;21us;138us;24us;119us;25us;120us;34us;118us;35us;117us;38us;115us;39us;116us;42us;111us;43us;113us;2us;32768us;48us;145us;53us;146us;0us;16440us;2us;32768us;48us;145us;53us;146us;0us;16441us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;1us;32768us;40us;148us;0us;16448us;1us;32768us;40us;148us;0us;16449us;1us;32768us;40us;148us;0us;16450us;1us;32768us;40us;148us;0us;16451us;1us;32768us;40us;148us;0us;16452us;1us;32768us;40us;148us;0us;16453us;1us;32768us;40us;148us;0us;16454us;1us;32768us;40us;148us;0us;16455us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;0us;16459us;0us;16460us;0us;16461us;0us;16462us;0us;16463us;0us;16464us;0us;16467us;17us;16469us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;2us;32768us;36us;151us;41us;150us;0us;16468us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;0us;16473us;18us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;45us;154us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;0us;16472us;0us;16476us;2us;32768us;47us;157us;49us;158us;0us;16475us;17us;32768us;23us;140us;26us;121us;27us;123us;28us;125us;29us;127us;30us;129us;31us;131us;32us;133us;33us;135us;44us;152us;46us;155us;48us;93us;50us;94us;54us;92us;55us;89us;56us;90us;57us;91us;0us;16479us;2us;32768us;45us;161us;54us;147us;0us;16478us;0us;16480us;0us;16485us;3us;32768us;45us;165us;51us;141us;53us;142us;0us;16484us;0us;16486us;|]
let _fsyacc_actionTableRowOffsets = [|0us;1us;2us;7us;8us;9us;10us;11us;14us;16us;17us;24us;25us;26us;27us;28us;29us;30us;32us;50us;61us;63us;81us;92us;94us;96us;97us;99us;101us;102us;104us;106us;107us;111us;112us;120us;121us;123us;124us;132us;133us;134us;135us;136us;137us;138us;139us;141us;143us;144us;146us;148us;149us;151us;153us;154us;156us;158us;159us;161us;163us;164us;166us;168us;169us;171us;173us;174us;182us;183us;184us;185us;186us;187us;188us;190us;192us;193us;195us;213us;224us;226us;228us;229us;231us;233us;234us;236us;238us;239us;240us;241us;242us;243us;244us;245us;246us;247us;254us;261us;266us;271us;274us;277us;286us;298us;309us;310us;321us;332us;343us;354us;357us;358us;361us;362us;380us;398us;416us;434us;452us;470us;472us;473us;475us;476us;478us;479us;481us;482us;484us;485us;487us;488us;490us;491us;493us;494us;512us;530us;548us;566us;567us;568us;569us;570us;571us;572us;573us;591us;594us;595us;613us;614us;633us;634us;635us;638us;639us;657us;658us;661us;662us;663us;664us;668us;669us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;2us;5us;0us;2us;2us;2us;2us;2us;3us;3us;3us;3us;3us;1us;4us;2us;5us;0us;2us;2us;2us;2us;2us;2us;3us;3us;3us;3us;3us;3us;5us;0us;2us;2us;2us;2us;2us;3us;3us;3us;3us;2us;3us;1us;1us;1us;1us;1us;1us;1us;1us;3us;3us;3us;3us;3us;3us;3us;3us;2us;2us;2us;2us;2us;2us;2us;2us;3us;5us;2us;1us;1us;1us;1us;1us;1us;1us;1us;1us;3us;0us;1us;3us;3us;0us;2us;3us;0us;3us;3us;0us;2us;3us;0us;2us;3us;0us;2us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;2us;2us;3us;4us;4us;4us;4us;4us;4us;5us;6us;7us;8us;9us;10us;10us;10us;10us;11us;11us;11us;11us;11us;11us;11us;12us;13us;14us;15us;16us;17us;18us;19us;19us;19us;19us;19us;19us;20us;21us;22us;23us;24us;24us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;25us;26us;26us;27us;27us;28us;28us;29us;29us;30us;31us;32us;32us;32us;33us;34us;34us;35us;36us;36us;37us;38us;38us;39us;40us;40us;41us;42us;42us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;16387us;16388us;16389us;65535us;65535us;65535us;65535us;16390us;16392us;16393us;16394us;16395us;16396us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16399us;65535us;65535us;16400us;65535us;65535us;16401us;65535us;65535us;65535us;16403us;65535us;65535us;65535us;16405us;16407us;16408us;16409us;16410us;16411us;16412us;65535us;65535us;16413us;65535us;65535us;16414us;65535us;65535us;16415us;65535us;65535us;16416us;65535us;65535us;16417us;65535us;65535us;16418us;65535us;65535us;65535us;65535us;16419us;16421us;16422us;16423us;16424us;16425us;65535us;65535us;16426us;65535us;65535us;65535us;65535us;65535us;16428us;65535us;65535us;16429us;65535us;65535us;16431us;16432us;16433us;16434us;16435us;16436us;16437us;16438us;16439us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16440us;65535us;16441us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16448us;65535us;16449us;65535us;16450us;65535us;16451us;65535us;16452us;65535us;16453us;65535us;16454us;65535us;16455us;65535us;65535us;65535us;65535us;16459us;16460us;16461us;16462us;16463us;16464us;16467us;65535us;65535us;16468us;65535us;65535us;65535us;16472us;65535us;65535us;16475us;65535us;65535us;65535us;16478us;16480us;65535us;65535us;16484us;16486us;|]
let _fsyacc_reductions = lazy [|
# 561 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Terrabuild.Configuration.Project.AST.ProjectFile in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startProjectFile));
# 570 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "ProjectParser/Parser.fsy"
                                                       ProjectFile.Build _1 
                   )
# 56 "ProjectParser/Parser.fsy"
                 : Terrabuild.Configuration.Project.AST.ProjectFile));
# 581 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 59 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 591 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Project in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "ProjectParser/Parser.fsy"
                                                           _1 @ [_2] 
                   )
# 60 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 603 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Extension in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "ProjectParser/Parser.fsy"
                                                             _1 @ [_2] 
                   )
# 61 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 615 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectFileComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_Target in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "ProjectParser/Parser.fsy"
                                                          _1 @ [_2] 
                   )
# 62 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectFileComponents));
# 627 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            let _4 = parseState.GetInput(4) :?> 'gentype_ExtensionComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "ProjectParser/Parser.fsy"
                                                                                             Extension.Build _2 _4 |> ProjectFileComponents.Extension 
                   )
# 66 "ProjectParser/Parser.fsy"
                 : 'gentype_Extension));
# 639 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 68 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 649 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionContainer in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "ProjectParser/Parser.fsy"
                                                                    _1 @ [_2] 
                   )
# 69 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 661 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionPlaform in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "ProjectParser/Parser.fsy"
                                                                  _1 @ [_2] 
                   )
# 70 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 673 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionVariables in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "ProjectParser/Parser.fsy"
                                                                    _1 @ [_2] 
                   )
# 71 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 685 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionScript in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "ProjectParser/Parser.fsy"
                                                                 _1 @ [_2] 
                   )
# 72 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 697 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionDefaults in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "ProjectParser/Parser.fsy"
                                                                   _1 @ [_2] 
                   )
# 73 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionComponents));
# 709 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "ProjectParser/Parser.fsy"
                                                  ExtensionComponents.Container _3 
                   )
# 75 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionContainer));
# 720 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "ProjectParser/Parser.fsy"
                                                 ExtensionComponents.Platform _3 
                   )
# 77 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionPlaform));
# 731 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "ProjectParser/Parser.fsy"
                                                          ExtensionComponents.Variables _3 
                   )
# 79 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionVariables));
# 742 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "ProjectParser/Parser.fsy"
                                                 ExtensionComponents.Script _3 
                   )
# 81 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionScript));
# 753 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "ProjectParser/Parser.fsy"
                                                    ExtensionComponents.Defaults _3 
                   )
# 83 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionDefaults));
# 764 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "ProjectParser/Parser.fsy"
                                     Project.Build None [] |> ProjectFileComponents.Project 
                   )
# 87 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 774 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ProjectComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "ProjectParser/Parser.fsy"
                                                                     Project.Build None _3 |> ProjectFileComponents.Project 
                   )
# 88 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 785 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "ProjectParser/Parser.fsy"
                                                         Project.Build (Some _2) [] |> ProjectFileComponents.Project 
                   )
# 89 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 796 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExtensionIdentifier in
            let _4 = parseState.GetInput(4) :?> 'gentype_ProjectComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "ProjectParser/Parser.fsy"
                                                                                         Project.Build (Some _2) _4 |> ProjectFileComponents.Project 
                   )
# 90 "ProjectParser/Parser.fsy"
                 : 'gentype_Project));
# 808 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 92 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 818 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectDependencies in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "ProjectParser/Parser.fsy"
                                                                   _1 @ [_2] 
                   )
# 93 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 830 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectLinks in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "ProjectParser/Parser.fsy"
                                                            _1 @ [_2] 
                   )
# 94 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 842 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectOutputs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "ProjectParser/Parser.fsy"
                                                              _1 @ [_2] 
                   )
# 95 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 854 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectIgnores in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "ProjectParser/Parser.fsy"
                                                              _1 @ [_2] 
                   )
# 96 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 866 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectIncludes in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "ProjectParser/Parser.fsy"
                                                               _1 @ [_2] 
                   )
# 97 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 878 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ProjectComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_ProjectLabels in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "ProjectParser/Parser.fsy"
                                                             _1 @ [_2] 
                   )
# 98 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectComponents));
# 890 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "ProjectParser/Parser.fsy"
                                                             ProjectComponents.Dependencies _3 
                   )
# 100 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectDependencies));
# 901 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "ProjectParser/Parser.fsy"
                                                      ProjectComponents.Links _3 
                   )
# 102 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectLinks));
# 912 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "ProjectParser/Parser.fsy"
                                                        ProjectComponents.Outputs _3 
                   )
# 104 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectOutputs));
# 923 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "ProjectParser/Parser.fsy"
                                                        ProjectComponents.Ignores _3 
                   )
# 106 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectIgnores));
# 934 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "ProjectParser/Parser.fsy"
                                                         ProjectComponents.Includes _3 
                   )
# 108 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectIncludes));
# 945 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "ProjectParser/Parser.fsy"
                                                       ProjectComponents.Labels _3 
                   )
# 110 "ProjectParser/Parser.fsy"
                 : 'gentype_ProjectLabels));
# 956 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_TargetComponents in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "ProjectParser/Parser.fsy"
                                                                              Target.Build _2 _4 |> ProjectFileComponents.Target 
                   )
# 113 "ProjectParser/Parser.fsy"
                 : 'gentype_Target));
# 968 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 115 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 978 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetDependsOn in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "ProjectParser/Parser.fsy"
                                                              _1 @ [_2] 
                   )
# 116 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 990 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetRebuild in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "ProjectParser/Parser.fsy"
                                                            _1 @ [_2] 
                   )
# 117 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 1002 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetOutputs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "ProjectParser/Parser.fsy"
                                                            _1 @ [_2] 
                   )
# 118 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 1014 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetCache in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "ProjectParser/Parser.fsy"
                                                          _1 @ [_2] 
                   )
# 119 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 1026 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetComponents in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetStep in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "ProjectParser/Parser.fsy"
                                                         _1 @ [_2] 
                   )
# 120 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetComponents));
# 1038 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfTargetIdentifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "ProjectParser/Parser.fsy"
                                                                      TargetComponents.DependsOn _3 
                   )
# 122 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetDependsOn));
# 1049 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "ProjectParser/Parser.fsy"
                                                TargetComponents.Rebuild _3 
                   )
# 124 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetRebuild));
# 1060 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ListOfString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "ProjectParser/Parser.fsy"
                                                        TargetComponents.Outputs _3 
                   )
# 126 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetOutputs));
# 1071 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "ProjectParser/Parser.fsy"
                                                TargetComponents.Cache _3 
                   )
# 128 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetCache));
# 1082 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionIdentifier in
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "ProjectParser/Parser.fsy"
                                                            TargetComponents.Step { Extension = _1; Command = _2; Parameters = Map.empty } 
                   )
# 130 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetStep));
# 1094 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExtensionIdentifier in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "ProjectParser/Parser.fsy"
                                                                    TargetComponents.Step { Extension = _1; Command = _2; Parameters = _3 } 
                   )
# 131 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetStep));
# 1107 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "ProjectParser/Parser.fsy"
                                     Expr.Nothing 
                   )
# 135 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1117 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "ProjectParser/Parser.fsy"
                                  Expr.Bool true 
                   )
# 136 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1127 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "ProjectParser/Parser.fsy"
                                   Expr.Bool false 
                   )
# 137 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1137 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "ProjectParser/Parser.fsy"
                                    Expr.String _1 
                   )
# 138 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1148 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "ProjectParser/Parser.fsy"
                                    Expr.Number _1 
                   )
# 139 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1159 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "ProjectParser/Parser.fsy"
                                      Expr.Variable _1 
                   )
# 140 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1170 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "ProjectParser/Parser.fsy"
                                      Expr.List _1 
                   )
# 142 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1181 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprMap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "ProjectParser/Parser.fsy"
                                     Expr.Map _1 
                   )
# 143 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1192 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprIndex in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "ProjectParser/Parser.fsy"
                                                Expr.Function (Function.Item, [_1;  _3]) 
                   )
# 145 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1204 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_ExprIndex in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "ProjectParser/Parser.fsy"
                                                         Expr.Function (Function.TryItem, [_1; _3]) 
                   )
# 146 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1216 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "ProjectParser/Parser.fsy"
                                                    Expr.Function (Function.Equal, [_1; _3]) 
                   )
# 147 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1228 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "ProjectParser/Parser.fsy"
                                                 Expr.Function (Function.NotEqual, [_1; _3]) 
                   )
# 148 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1240 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "ProjectParser/Parser.fsy"
                                            Expr.Function (Function.Plus, [_1; _3]) 
                   )
# 149 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1252 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "ProjectParser/Parser.fsy"
                                             Expr.Function (Function.Minus, [_1; _3]) 
                   )
# 150 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1264 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "ProjectParser/Parser.fsy"
                                           Expr.Function (Function.And, [_1; _3]) 
                   )
# 151 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1276 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "ProjectParser/Parser.fsy"
                                          Expr.Function (Function.Or, [_1; _3]) 
                   )
# 152 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1288 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "ProjectParser/Parser.fsy"
                                            Expr.Function (Function.Trim, _2) 
                   )
# 153 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1299 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "ProjectParser/Parser.fsy"
                                             Expr.Function (Function.Upper, _2) 
                   )
# 154 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1310 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "ProjectParser/Parser.fsy"
                                             Expr.Function (Function.Lower, _2) 
                   )
# 155 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1321 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "ProjectParser/Parser.fsy"
                                               Expr.Function (Function.Replace, _2) 
                   )
# 156 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1332 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "ProjectParser/Parser.fsy"
                                             Expr.Function (Function.Count, _2)
                   )
# 157 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1343 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "ProjectParser/Parser.fsy"
                                               Expr.Function (Function.Version, _2) 
                   )
# 158 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1354 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "ProjectParser/Parser.fsy"
                                              Expr.Function (Function.Format, _2) 
                   )
# 159 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1365 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "ProjectParser/Parser.fsy"
                                                Expr.Function (Function.ToString, _2) 
                   )
# 160 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1376 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "ProjectParser/Parser.fsy"
                                                       Expr.Function (Function.Coalesce, [_1; _3]) 
                   )
# 161 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1388 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "ProjectParser/Parser.fsy"
                                                           Expr.Function (Function.Ternary, [_1; _3; _5] ) 
                   )
# 162 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1401 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "ProjectParser/Parser.fsy"
                                       Expr.Function (Function.Not, [_2]) 
                   )
# 163 "ProjectParser/Parser.fsy"
                 : 'gentype_Expr));
# 1412 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "ProjectParser/Parser.fsy"
                                               _1 
                   )
# 166 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifier));
# 1423 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "ProjectParser/Parser.fsy"
                                        _1 
                   )
# 167 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifier));
# 1434 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "ProjectParser/Parser.fsy"
                                                  _1 
                   )
# 170 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionIdentifier));
# 1445 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "ProjectParser/Parser.fsy"
                                        _1 
                   )
# 171 "ProjectParser/Parser.fsy"
                 : 'gentype_ExtensionIdentifier));
# 1456 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "ProjectParser/Parser.fsy"
                                    Expr.Number _1 
                   )
# 174 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprIndex));
# 1467 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "ProjectParser/Parser.fsy"
                                        Expr.String _1 
                   )
# 175 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprIndex));
# 1478 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "ProjectParser/Parser.fsy"
                                  true 
                   )
# 178 "ProjectParser/Parser.fsy"
                 : 'gentype_Bool));
# 1488 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "ProjectParser/Parser.fsy"
                                   false 
                   )
# 179 "ProjectParser/Parser.fsy"
                 : 'gentype_Bool));
# 1498 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "ProjectParser/Parser.fsy"
                                    _1 
                   )
# 182 "ProjectParser/Parser.fsy"
                 : 'gentype_String));
# 1509 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprTupleContent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "ProjectParser/Parser.fsy"
                                                            _2 
                   )
# 185 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprTuple));
# 1520 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 187 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprTupleContent));
# 1530 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "ProjectParser/Parser.fsy"
                                  [_1] 
                   )
# 188 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprTupleContent));
# 1541 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprTupleContent in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "ProjectParser/Parser.fsy"
                                                         _1 @ [_3] 
                   )
# 189 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprTupleContent));
# 1553 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprListContent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "ProjectParser/Parser.fsy"
                                                                   _2 
                   )
# 192 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprList));
# 1564 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 194 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprListContent));
# 1574 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprListContent in
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "ProjectParser/Parser.fsy"
                                                  _1 @ [_2] 
                   )
# 195 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprListContent));
# 1586 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprMapContent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "ProjectParser/Parser.fsy"
                                                          _2 
                   )
# 198 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMap));
# 1597 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "ProjectParser/Parser.fsy"
                                         Map.empty 
                   )
# 200 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMapContent));
# 1607 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprMapContent in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "ProjectParser/Parser.fsy"
                                                     _1.Add (_2, _3) 
                   )
# 201 "ProjectParser/Parser.fsy"
                 : 'gentype_ExprMapContent));
# 1620 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Strings in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "ProjectParser/Parser.fsy"
                                                           _2 
                   )
# 204 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfString));
# 1631 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 206 "ProjectParser/Parser.fsy"
                 : 'gentype_Strings));
# 1641 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Strings in
            let _2 = parseState.GetInput(2) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "ProjectParser/Parser.fsy"
                                            _1 @ [_2] 
                   )
# 207 "ProjectParser/Parser.fsy"
                 : 'gentype_Strings));
# 1653 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Identifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "ProjectParser/Parser.fsy"
                                                               _2 
                   )
# 210 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfIdentifiers));
# 1664 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 212 "ProjectParser/Parser.fsy"
                 : 'gentype_Identifiers));
# 1674 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Identifiers in
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "ProjectParser/Parser.fsy"
                                                    _1 @ [_2] 
                   )
# 213 "ProjectParser/Parser.fsy"
                 : 'gentype_Identifiers));
# 1686 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetIdentifiers in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "ProjectParser/Parser.fsy"
                                                                     _2 
                   )
# 216 "ProjectParser/Parser.fsy"
                 : 'gentype_ListOfTargetIdentifiers));
# 1697 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "ProjectParser/Parser.fsy"
                                         [] 
                   )
# 218 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifiers));
# 1707 "Gen/ProjectParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TargetIdentifiers in
            let _2 = parseState.GetInput(2) :?> 'gentype_TargetIdentifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "ProjectParser/Parser.fsy"
                                                                _1 @ [_2] 
                   )
# 219 "ProjectParser/Parser.fsy"
                 : 'gentype_TargetIdentifiers));
|]
# 1720 "Gen/ProjectParser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 61;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let ProjectFile lexer lexbuf : Terrabuild.Configuration.Project.AST.ProjectFile =
    engine lexer lexbuf 0 :?> _
