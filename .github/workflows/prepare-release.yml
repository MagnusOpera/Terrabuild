name: prepare-release
run-name: Prepare release ${{github.ref_name}}

on:
  push:
    tags:
      - '**'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Info
        run: echo 'Building ${{ github.ref }}'

      - name: Cloning repository
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.302

      - name: Extract Version/Version Suffix
        run: |
          s=${{github.ref_name}}
          pat="([^-]*)-?([^-]*)"
          [[ $s =~ $pat ]]
          BUILD_VERSION=${BASH_REMATCH[1]}
          BUILD_VERSION_SUFFIX=${BASH_REMATCH[2]}
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          echo "BUILD_VERSION_SUFFIX=$BUILD_VERSION_SUFFIX" >> $GITHUB_ENV
          echo "BUILD_VERSION: $BUILD_VERSION"
          echo "BUILD_VERSION_SUFFIX: $BUILD_VERSION_SUFFIX"

      - name: Build & Publish
        run: make publish-all config=Release version=${{ env.BUILD_VERSION }} version_suffix=${{ env.BUILD_VERSION_SUFFIX }}

      - name: Archive outputs
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: .out/

  sign:
    runs-on: macos-latest
    needs: build
    steps:
      - name: Download outputs
        uses: actions/download-artifact@v4
        with:
          name: outputs
          path: .out

      - name: Dump
        run: ls -alR .

      - name: Sign
        run: |
          codesign --force --timestamp --sign "Developer ID Application: Magnus Opera (${{ secrets.MAC_DEV_TEAM_ID }})" .out/darwin/x64/terrabuild --options=runtime --no-strict --entitlements entitlements.plist
          codesign --force --timestamp --sign "Developer ID Application: Magnus Opera (${{ secrets.MAC_DEV_TEAM_ID }})" .out/darwin/arm64/terrabuild --options=runtime --no-strict --entitlements entitlements.plist
          lipo -create -output $(PWD)/.out/darwin/terrabuild $(PWD)/.out/darwin/x64/terrabuild $(PWD)/.out/darwin/arm64/terrabuild

      - name: Archive outputs
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: .out

  create-release:
    runs-on: ubuntu-latest
    needs: sign
    steps:
      - name: Cloning repository
        uses: actions/checkout@v4

      - name: Download outputs
        uses: actions/download-artifact@v4
        with:
          name: outputs
          path: .out

      - name: Extract Version/Version Suffix
        run: |
          s=${{github.ref_name}}
          pat="([^-]*)-?([^-]*)"
          [[ $s =~ $pat ]]
          BUILD_VERSION=${BASH_REMATCH[1]}
          BUILD_VERSION_SUFFIX=${BASH_REMATCH[2]}
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          echo "BUILD_VERSION_SUFFIX=$BUILD_VERSION_SUFFIX" >> $GITHUB_ENV
          echo "BUILD_VERSION: $BUILD_VERSION"
          echo "BUILD_VERSION_SUFFIX: $BUILD_VERSION_SUFFIX"

      - name: Pack
        run: make pack-all config=Release version=${{ env.BUILD_VERSION }} version_suffix=${{ env.BUILD_VERSION_SUFFIX }}

      - name: GitHub Release
        uses: softprops/action-gh-release@v2.0.6
        with:
          draft: true
          prerelease: ${{ env.BUILD_VERSION_SUFFIX != '' }}
          generate_release_notes: true
          files: |
            ./.out/*.zip
            ./.out/*.nupkg
